# Reading C:/Program Files/questasim_10.0b/tcl/vsim/pref.tcl 
# //  Questa Sim
# //  Version 10.0b win32 May  5 2011
# //
# //  Copyright 1991-2011 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //
# OpenFile C:/Users/raimo/Documents/RISCV/TFG-Pau/RV32i-Verilog-master/tb/testbench.v 
#  
# Loading project Test_RISCV
# Compile of arithmeticologic.v failed with 1 errors.
# Compile of testbench.v failed with 7 errors.
# Compile of core.v failed with 5 errors.
# Compile of core_control_unit.v was successful.
# Compile of core_program_counter.v failed with 1 errors.
# Compile of core_regfile.v was successful.
# Compile of core_csr_unit.v failed with 2 errors.
# Compile of core_csr_unit_timer.v failed with 1 errors.
# Compile of core_execution_unit.v failed with 3 errors.
# Compile of core_execution_unit_alu.v failed with 1 errors.
# Compile of core_execution_unit_br.v failed with 1 errors.
# Compile of core_execution_unit_lis.v failed with 1 errors.
# Compile of mem_data.v was successful.
# Compile of mem_prog.v was successful.
# Compile of top.v failed with 7 errors.
# 15 compiles, 11 failed with 30 errors. 
# Compile of arithmeticologic.v failed with 1 errors.
# Compile of testbench.v failed with 7 errors.
# Compile of core.v failed with 5 errors.
# Compile of core_control_unit.v was successful.
# Compile of core_program_counter.v failed with 1 errors.
# Compile of core_regfile.v was successful.
# Compile of core_csr_unit.v failed with 1 errors.
# Compile of core_csr_unit_timer.v failed with 1 errors.
# Compile of core_execution_unit.v failed with 3 errors.
# Compile of core_execution_unit_alu.v failed with 1 errors.
# Compile of core_execution_unit_br.v failed with 1 errors.
# Compile of core_execution_unit_lis.v failed with 1 errors.
# Compile of mem_data.v was successful.
# Compile of mem_prog.v was successful.
# Compile of top.v failed with 7 errors.
# 15 compiles, 11 failed with 29 errors. 
# Compile of core_execution_unit_lis.v failed with 1 errors.
OpenFile C:/Users/raimo/Documents/RISCV/TFG-Pau/RV32i-Verilog-master/tb/testbench.v

# Compile of core_execution_unit_lis.v failed with 1 errors.

vlog -help
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -32                Run in 32-bit mode
#   -64                Run in 64-bit mode
#   -work <path>       Specify library WORK
#   -error <msgNumber>[,<msgNumber>...]
#                      Report the listed messages as errors
#   -warning <msgNumber>[,<msgNumber>...]
#                      Report the listed messages as warnings
#   -note <msgNumber>[,<msgNumber>...]
#                      Report the listed message as notes
#   -suppress <msgNumber>[,<msgNumber>...]
#                      Suppress the listed messages
#   -msglimit <msgNumber>[,<msgNumber>...]
#                      Limit the reporting of listed messages
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the equivalent entity interface
#   -ams               Enable AMS wreal extensions
#   +acc[=<spec>][{+<selection>[.]}]
#                      Enable PLI and debug command access to specified objects
#                      when optimizing a design.
#                      Objects are specified by a combination of design unit name
#                      and object-kind and/or hierarchical name and object-kind.
#                      The +<selection> and <spec> modifiers together specify a set
#                      of objects in a given place of a design.
#                      These modifiers help maximize simulation performance while
#                      retaining access to objects of interest.
#                      The effect of this option is limited only to those design units
#                      being compiled in the current vlog session.
# 
#                      By default, this option has an effect on all design units
#                      being compiled.
#                      +<selection> can be used to target the extent of this option
#                      to only a specified design unit, instance, region, or object.
#                      When +<selection> is a design unit name, all instances of that
#                      design unit are affected.  When +<selection> is a design pathname
#                      to an instance or region, only objects in that part of the design
#                      are affected.  When +<selection> is a design pathname to an object,
#                      only that object is affected.
#                      For design units, instances, and regions,  if a trailing '.' is
#                      present, the option is also applied recursively downwards (overriding
#                      any number given in <spec> if it is present).
# 
#                      Examples:
#                         VHDL Design Unit:    +acc+myentity(myarch)
#                         Verilog Design Unit: +acc=rn+Demux
#                         Instance and below:  +acc=mrp+/top/u1.
#                         Object:              +acc=r+/top/myreg
#                         Region and below:    +acc+'/top/gen[3].'
# 
#                      By default, +acc has effect on all kinds of design objects.
#                      <spec> is used to target more precisely certain kinds of objects.
#                      <spec> consists of one or more of the following letter codes:
#                         a (SVA/PSL objects, requirement for vsim -assertdebug)
#                         b (net bits)
#                         c (cell internal objects)
#                         f (finite state machine recognition and debugging)
#                         l (line debugging)
#                         m (module, program, and interface instances)
#                         n (nets)
#                         p (ports)
#                         r (variables and parameters)
#                         s (enable override of built-in system tasks)
#                         t (task and function scopes)
#                         u (primitive instances)
# 
#                      When no valid <spec> characters are specified, the entire set
#                      is enabled.
#                      <spec> can contain a natural number to specify a recursive level
#                      downwards from the specified entity (unless overridden by a trailing
#                      '.' character given after +<selection> if present).
#   +floatparameters[{+<selection>[.]}]
#                      Don't lock down parameter values during compilation.
#                      This enables use of the vsim -g/G options on the affected
#                      parameters.
#                      The effect of the option is limited to parameters in
#                      design units being compiled in the current vlog session.
# 
#                      The +<selection> modifier is described in the help text
#                      for the +acc option.
#   -compat            Disable optimizations that result in different event ordering
#                      than Verilog-XL (at expense of performance).
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -cuname <compilation_unit_name>
#                      Explicitly name the compilation unit package. The option
#                      can only be used with -mfcu. The <compilation_unit_name>
#                      can be top design unit name at vsim and vopt commandline
#   +cover[=<spec>]
#                      <spec> is used to enable code coverage metrics for certain
#                      kinds of constructs.
#                      <spec> consists of one or more of the following letter codes:
#                         s (statement)
#                         b (branch)
#                         c (condition)
#                         e (expression)
#                         f (finite state machine)
#                         t (toggle)
#                         x (extended toggle)
#                      If no <spec> characters are given, sbceft is the default.
#   -coveropt <i>      Specify a digit for code coverage optimization level: 1 through 4.
#   -coverexcludedefault Automatically exclude case default clauses.
#   -coverfec          Enable Focused Expression Coverage analysis for conditions and expressions.
#   -nocoverfec        Disable Focused Expression Coverage analysis for conditions and expressions.
#   -coverudp          Enable UDP Coverage analysis for conditions and expressions.
#   -nocoverudp        Disable UDP Coverage analysis for conditions and expressions.
#   -nocovershort      Disable short circuiting of expressions/condition when coverage is enabled.
#   -nocoverexcludedefault Don't automatically exclude case default clauses.
#   -covercells        Enable code coverage options in cells
#   -nocovercells      Disable code coverage options in cells
#   -constimmedassert  Show constant immediate assertions in GUI/UCDB/reports etc.
#   -togglecountlimit n Quit collecting toggle info after count n is reached.
#   -togglewidthlimit n Don't collect toggle data on reg's or arrays wider than n.
#   -extendedtogglemode [1|2|3]
#                      Change the level of support for extended toggles.
#                      The levels of support are:
#                      1 - 0L->1H & 1H->0L & any one 'Z' transition (to/from 'Z')
#                      2 - 0L->1H & 1H->0L & one transition to 'Z' & one transition from 'Z'
#                      3 - 0L->1H & 1H->0L & all 'Z' transitions
#   -toggleportsonly   Enable toggle statistics collection only for ports.
#   -maxudprows n      Max number of rows allowed in UDP tables for code coverage.
#   -maxfecrows n      Max number of input patterns allowed in FEC table for code coverage.
#   -coverreportcancelled Report coverage items that have been optimized away.
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   -deglitchalways    Make always_comb and always @* insensitive to variable
#                      glitches, potentially breaking zero delay oscillations
#                      among combinatorial always blocks.
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -dpiforceheader    Force generation of dpi header file even when
#                      empty of function prototypes
#   -dpiheader <filename>
#                      Save the generated declarations of SystemVerilog DPI
#                      tasks and functions into <filename>
#   -E <filename>      Write preprocessed Verilog and SystemVerilog into <filename>
#   -Epretty <filename>
#                      Write pretty preprocessed Verilog and SystemVerilog into <filename>
#   -Edebug <filename>
#                      Write debugable preprocessed Verilog and SystemVerilog into <filename>
#   -enumfirstinit     Initialize an enum using its first elem.
#   -f <path>          Specify a file containing more command line arguments
#   -nofsmresettrans   Disable recognition of implicit asynchronous reset transitions for FSMs
#   -fsmresettrans     Enable recognition of implicit asynchronous reset transitions for FSMs
#   -nofsmsingle       Disable recognition FSMs having single bit current state variable
#   -fsmsingle         Enable recognition FSMs having single bit current state variable
#   -fsmimplicittrans  Enable recognition of implicit transitions in FSMs
#   -nofsmimplicittrans Disable recognition of implicit transitions in FSMs
#   -fsmmultitrans     Enable recognition of Multi-state transitions in FSMs
#   -fsmverbose [b|t|w]
#                      Provides information about FSMs recognized, including state reachability analysis.
#                      There are three detail levels that can be set with this option.
#                         b (displays only basic information)
#                         t (displays a transition table in addition to the basic information)
#                         w (displays any warning messages in addition to the basic information)
#                      If no character is specified, btw is the default.
#   -nofsmxassign      Disable recognition of FSMs containing x assignment
#   -fsmxassign        Enable recognition of FSMs containing x assignment
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified design unit in XML format
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   +initmem[=<spec>][+0|1|X|Z]
#                      Initialize fixed-size arrays of type indicated by <spec>.
#   +initreg[=<spec>][+0|1|X|Z]
#                      Initialize variables of type indicated by <spec>.
#                      Valid values of <spec> are:
#                         r (4-state integral types)
#                         b (2-state integral types)
#                         e (enum types)
#                         u (udp types)
#                      If no <spec> is given, all these types are enabled.
#                      If 0|1|X|Z is specified, all the bits in the variable
#                      are intialized to that value.  Otherwise, these variables
#                      are prepared for randomization during vsim.
#   -isymfile <filename>
#                      Write the symbol names of all DPI import tf's into <filename>
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   -l <filename>      Write compilation log to <filename>
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   -libmap_verbose    Display library map pattern matching information during compilation
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   -lowercasepragma   Allow only lower case pragmas
#   -lowercasepslpragma   Allow only lower case PSL pragmas
#   -lrmclassinit      Use LRM-compliant class property initialization ordering
#   -modelsimini <modelsim.ini>
#                      Specify path to the modelsim.ini file.
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   -mfcu              Multi-file compilation unit, all files in command line make up a compilation unit.
#                      The default is to have each file be a separate compilation unit
#   +mindelays         Use minimum timing from min:typ:max expressions
#   -mixedansiports    Enables mixing of ANSI-style and non-ANSI-style declarations
#   -nocheck           Disable run-time range and index checks
#   -nodebug[=ports][=pli][=ports+pli]
#                      Do not put symbolic debugging information into the library
#   -nodbgsym
#                      Do not generate symbols debugging database
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells(default)
#   +libcell           Define library modules (found with -v|-y search) as cells
#   -nologo            Disable startup banner
#   -nopsl             Disable embedded PSL language parsing
#   -novopt            Do not run the "vopt" compiler before simulation
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   -nowarn <number>   Disable specified category of warning messages; verror 1907 to see them
#   +nowarn<CODE>      Disable specified warning message
#   -noconstimmedassert  Do not show constant immediate assertions in GUI/UCDB/reports etc.
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   -pedanticerrors    Enforce strict language checks
#   -permissive        Relax some language error checks to warnings.
#   -printinfilenames  Print path names for all source files opened during compilation.
#   +protect[=<file>]  Enable use of `protect...`endprotect compiler directives
#   -pslext            Enable PSL LTL/Universal operators
#   -pslfile <file>    Compile and bind PSL vunits specified by <file>
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -scdpiheader <filename>
#                      Save the generated declarations of SystemVerilog SystemC DPI
#                      tasks and functions into <filename>
#   -sfcu              Single-file compilation unit (default),
#                      each file in command line is a separate compilation unit
#   -skipprotected     Ignore protected regions
#   -skipprotectedmodule Ignore modules containing protected regions
#   -source            Print the source line with error messages
#   -sv                Enable SystemVerilog features and keywords
#   -sv05compat        Ensure compatibility with IEEE standard 1800-2005
#   -sv09compat        Ensure compatibility with IEEE standard 1800-2009
#   -oldsv             Enable selected constructs no longer supported by the SystemVerilog standard
#   -svinputport=net|var|relaxed
#                      Select the default kind for an input port that is
#                      declared with a type, but without the var keyword.
#                      Select 'net' for strict LRM compliance, where the
#                      kind always defaults to wire. Select 'var' for
#                      non-compliant behavior, where the kind always defaults
#                      to var. The default is 'relaxed', where only a
#                      type that is a 4-state scalar or 4-state single
#                      dimension vector type defaults to wire.
#   -timescale <timescale>
#                      Specify the default timescale for modules not having an
#                      explicit timescale. The format of <timescale> is the same
#                      as that of the `timescale directive.
#                      For example, -timescale "1 ns / 1 ps".
#   -override_timescale <timescale>
#                      Override the timescale specified in the source code.
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -convertallparams  Enables converting parameters not defined in ANSI style
#                      to VHDL generics of type std_logic_vector, bit_vector,
#                      std_logic and bit.
#   -mixedsvvh [b | s | v] [packedstruct]
#                      Facilitates using a SV packages at the SV-VHDL mixed-language boundary.
#                         b - treat scalars/vectors in package as bit/bit_vector
#                         s - treat scalars/vectors in package as std_logic/std_logic_vector
#                         v - treat scalars/vectors in package as vl_logic/vl_logic_vector
#                         packedstruct - treat packed structures as VHDL arrays of equivalent size
#   -vopt              Run the "vopt" compiler before simulation
#   -y <path>          Specify Verilog source library directory
#   -vmake             Collects complete list of command line args and files processed for use by vmake.
#   -writetoplevels <fileName>
#                      Writes complete list of toplevels into <fileName> (also includes the name specified
#                      with -cuname). The file <fileName> can be used with vopt command's -f switch.
vlog core_execution_unit_lis.v +define CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# ** Error: (vlog-7) Failed to open design unit file "core_execution_unit_lis.v" in read mode.
# No such file or directory. (errno = ENOENT)
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_execution_unit_lis.v +define CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# ** Error: (vlog-7) Failed to open design unit file "../src/core/core_execution_unit_lis.v" in read mode.
# No such file or directory. (errno = ENOENT)
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_execution_unit/core_execution_unit_lis.v +define CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module lis
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(36): Net type of 'LIS_op' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(37): Net type of 'val_mem_write_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(39): Net type of 'val_mem_read_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(41): Net type of 'addr_mem_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(42): Net type of 'addr_mem_o' must be explicitly declared (`default_nettype is "none").
# ** Error: (vlog-7) Failed to open design unit file "CUSTOM_DEFINE" in read mode.
# No such file or directory. (errno = ENOENT)
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_execution_unit/core_execution_unit_lis.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module lis
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(36): Net type of 'LIS_op' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(37): Net type of 'val_mem_write_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(39): Net type of 'val_mem_read_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(41): Net type of 'addr_mem_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(42): Net type of 'addr_mem_o' must be explicitly declared (`default_nettype is "none").
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_execution_unit/core_execution_unit_lis.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module lis
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(37): Net type of 'val_mem_write_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(39): Net type of 'val_mem_read_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(41): Net type of 'addr_mem_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit_lis.v(42): Net type of 'addr_mem_o' must be explicitly declared (`default_nettype is "none").
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_execution_unit/core_execution_unit_lis.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module lis
# 
# Top level modules:
# 	lis
vlog +f
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# Usage: vlog [options] files
# Options:
#   -help              Print this message
#   -time              Print the compilation wall clock time
#   -version           Print the version of the compiler
#   -32                Run in 32-bit mode
#   -64                Run in 64-bit mode
#   -work <path>       Specify library WORK
#   -error <msgNumber>[,<msgNumber>...]
#                      Report the listed messages as errors
#   -warning <msgNumber>[,<msgNumber>...]
#                      Report the listed messages as warnings
#   -note <msgNumber>[,<msgNumber>...]
#                      Report the listed message as notes
#   -suppress <msgNumber>[,<msgNumber>...]
#                      Suppress the listed messages
#   -msglimit <msgNumber>[,<msgNumber>...]
#                      Limit the reporting of listed messages
#   -93                Use VHDL 1076-1993 extended identifiers to preserve the
#                      case of names in the equivalent entity interface
#   -ams               Enable AMS wreal extensions
#   +acc[=<spec>][{+<selection>[.]}]
#                      Enable PLI and debug command access to specified objects
#                      when optimizing a design.
#                      Objects are specified by a combination of design unit name
#                      and object-kind and/or hierarchical name and object-kind.
#                      The +<selection> and <spec> modifiers together specify a set
#                      of objects in a given place of a design.
#                      These modifiers help maximize simulation performance while
#                      retaining access to objects of interest.
#                      The effect of this option is limited only to those design units
#                      being compiled in the current vlog session.
# 
#                      By default, this option has an effect on all design units
#                      being compiled.
#                      +<selection> can be used to target the extent of this option
#                      to only a specified design unit, instance, region, or object.
#                      When +<selection> is a design unit name, all instances of that
#                      design unit are affected.  When +<selection> is a design pathname
#                      to an instance or region, only objects in that part of the design
#                      are affected.  When +<selection> is a design pathname to an object,
#                      only that object is affected.
#                      For design units, instances, and regions,  if a trailing '.' is
#                      present, the option is also applied recursively downwards (overriding
#                      any number given in <spec> if it is present).
# 
#                      Examples:
#                         VHDL Design Unit:    +acc+myentity(myarch)
#                         Verilog Design Unit: +acc=rn+Demux
#                         Instance and below:  +acc=mrp+/top/u1.
#                         Object:              +acc=r+/top/myreg
#                         Region and below:    +acc+'/top/gen[3].'
# 
#                      By default, +acc has effect on all kinds of design objects.
#                      <spec> is used to target more precisely certain kinds of objects.
#                      <spec> consists of one or more of the following letter codes:
#                         a (SVA/PSL objects, requirement for vsim -assertdebug)
#                         b (net bits)
#                         c (cell internal objects)
#                         f (finite state machine recognition and debugging)
#                         l (line debugging)
#                         m (module, program, and interface instances)
#                         n (nets)
#                         p (ports)
#                         r (variables and parameters)
#                         s (enable override of built-in system tasks)
#                         t (task and function scopes)
#                         u (primitive instances)
# 
#                      When no valid <spec> characters are specified, the entire set
#                      is enabled.
#                      <spec> can contain a natural number to specify a recursive level
#                      downwards from the specified entity (unless overridden by a trailing
#                      '.' character given after +<selection> if present).
#   +floatparameters[{+<selection>[.]}]
#                      Don't lock down parameter values during compilation.
#                      This enables use of the vsim -g/G options on the affected
#                      parameters.
#                      The effect of the option is limited to parameters in
#                      design units being compiled in the current vlog session.
# 
#                      The +<selection> modifier is described in the help text
#                      for the +acc option.
#   -compat            Disable optimizations that result in different event ordering
#                      than Verilog-XL (at expense of performance).
#   -compile_uselibs[=<directory_name>]
#                      Use the `uselib directive to find verilog source files
#                      and compile them into automatically created libraries
#   -cuname <compilation_unit_name>
#                      Explicitly name the compilation unit package. The option
#                      can only be used with -mfcu. The <compilation_unit_name>
#                      can be top design unit name at vsim and vopt commandline
#   +cover[=<spec>]
#                      <spec> is used to enable code coverage metrics for certain
#                      kinds of constructs.
#                      <spec> consists of one or more of the following letter codes:
#                         s (statement)
#                         b (branch)
#                         c (condition)
#                         e (expression)
#                         f (finite state machine)
#                         t (toggle)
#                         x (extended toggle)
#                      If no <spec> characters are given, sbceft is the default.
#   -coveropt <i>      Specify a digit for code coverage optimization level: 1 through 4.
#   -coverexcludedefault Automatically exclude case default clauses.
#   -coverfec          Enable Focused Expression Coverage analysis for conditions and expressions.
#   -nocoverfec        Disable Focused Expression Coverage analysis for conditions and expressions.
#   -coverudp          Enable UDP Coverage analysis for conditions and expressions.
#   -nocoverudp        Disable UDP Coverage analysis for conditions and expressions.
#   -nocovershort      Disable short circuiting of expressions/condition when coverage is enabled.
#   -nocoverexcludedefault Don't automatically exclude case default clauses.
#   -covercells        Enable code coverage options in cells
#   -nocovercells      Disable code coverage options in cells
#   -constimmedassert  Show constant immediate assertions in GUI/UCDB/reports etc.
#   -togglecountlimit n Quit collecting toggle info after count n is reached.
#   -togglewidthlimit n Don't collect toggle data on reg's or arrays wider than n.
#   -extendedtogglemode [1|2|3]
#                      Change the level of support for extended toggles.
#                      The levels of support are:
#                      1 - 0L->1H & 1H->0L & any one 'Z' transition (to/from 'Z')
#                      2 - 0L->1H & 1H->0L & one transition to 'Z' & one transition from 'Z'
#                      3 - 0L->1H & 1H->0L & all 'Z' transitions
#   -toggleportsonly   Enable toggle statistics collection only for ports.
#   -maxudprows n      Max number of rows allowed in UDP tables for code coverage.
#   -maxfecrows n      Max number of input patterns allowed in FEC table for code coverage.
#   -coverreportcancelled Report coverage items that have been optimized away.
#   +define+<macro_name>[=<macro_text>]
#                      Same as compiler directive: `define macro_name macro_text
#   -deglitchalways    Make always_comb and always @* insensitive to variable
#                      glitches, potentially breaking zero delay oscillations
#                      among combinatorial always blocks.
#   +delay_mode_distributed
#                      Use structural delays and ignore path delays
#   +delay_mode_path   Set structural delays to zero and use path delays
#   +delay_mode_unit   Set non-zero structural delays to one
#   +delay_mode_zero   Set structural delays to zero
#   -dpiforceheader    Force generation of dpi header file even when
#                      empty of function prototypes
#   -dpiheader <filename>
#                      Save the generated declarations of SystemVerilog DPI
#                      tasks and functions into <filename>
#   -E <filename>      Write preprocessed Verilog and SystemVerilog into <filename>
#   -Epretty <filename>
#                      Write pretty preprocessed Verilog and SystemVerilog into <filename>
#   -Edebug <filename>
#                      Write debugable preprocessed Verilog and SystemVerilog into <filename>
#   -enumfirstinit     Initialize an enum using its first elem.
#   -f <path>          Specify a file containing more command line arguments
#   -nofsmresettrans   Disable recognition of implicit asynchronous reset transitions for FSMs
#   -fsmresettrans     Enable recognition of implicit asynchronous reset transitions for FSMs
#   -nofsmsingle       Disable recognition FSMs having single bit current state variable
#   -fsmsingle         Enable recognition FSMs having single bit current state variable
#   -fsmimplicittrans  Enable recognition of implicit transitions in FSMs
#   -nofsmimplicittrans Disable recognition of implicit transitions in FSMs
#   -fsmmultitrans     Enable recognition of Multi-state transitions in FSMs
#   -fsmverbose [b|t|w]
#                      Provides information about FSMs recognized, including state reachability analysis.
#                      There are three detail levels that can be set with this option.
#                         b (displays only basic information)
#                         t (displays a transition table in addition to the basic information)
#                         w (displays any warning messages in addition to the basic information)
#                      If no character is specified, btw is the default.
#   -nofsmxassign      Disable recognition of FSMs containing x assignment
#   -fsmxassign        Enable recognition of FSMs containing x assignment
#   -gen_xml <entity> <output>
#                      Output (into a file) the interface definition of the
#                      specified design unit in XML format
#   -hazards           Enable run-time hazard checking code
#   +incdir+<dir>      Search directory for files included with
#                      `include "filename"
#   -incr              Enable incremental compilation
#   +initmem[=<spec>][+0|1|X|Z]
#                      Initialize fixed-size arrays of type indicated by <spec>.
#   +initreg[=<spec>][+0|1|X|Z]
#                      Initialize variables of type indicated by <spec>.
#                      Valid values of <spec> are:
#                         r (4-state integral types)
#                         b (2-state integral types)
#                         e (enum types)
#                         u (udp types)
#                      If no <spec> is given, all these types are enabled.
#                      If 0|1|X|Z is specified, all the bits in the variable
#                      are intialized to that value.  Otherwise, these variables
#                      are prepared for randomization during vsim.
#   -isymfile <filename>
#                      Write the symbol names of all DPI import tf's into <filename>
#   -L <libname>       Search library for design units needed when optimizing
#   -Lf <libname>      Same as -L, but libraries are searched before `uselib
#   -l <filename>      Write compilation log to <filename>
#   +libext+<suffix>   Specify suffix of files in library directory
#   -libmap <path>     Specify Verilog 2001 library map file
#   -libmap_verbose    Display library map pattern matching information during compilation
#   +librescan         Scan libraries in command line order for all
#                      unresolved module references
#   -line <lineNum>    Specify a starting line number
#   -lint              Perform lint-style checks
#   -lowercasepragma   Allow only lower case pragmas
#   -lowercasepslpragma   Allow only lower case PSL pragmas
#   -lrmclassinit      Use LRM-compliant class property initialization ordering
#   -modelsimini <modelsim.ini>
#                      Specify path to the modelsim.ini file.
#   +maxdelays         Use maximum timing from min:typ:max expressions
#   -mfcu              Multi-file compilation unit, all files in command line make up a compilation unit.
#                      The default is to have each file be a separate compilation unit
#   +mindelays         Use minimum timing from min:typ:max expressions
#   -mixedansiports    Enables mixing of ANSI-style and non-ANSI-style declarations
#   -nocheck           Disable run-time range and index checks
#   -nodebug[=ports][=pli][=ports+pli]
#                      Do not put symbolic debugging information into the library
#   -nodbgsym
#                      Do not generate symbols debugging database
#   -noincr            Disable incremental compile previously turned on with -incr
#   +nolibcell         Do not automatically define library modules as cells(default)
#   +libcell           Define library modules (found with -v|-y search) as cells
#   -nologo            Disable startup banner
#   -nopsl             Disable embedded PSL language parsing
#   -novopt            Do not run the "vopt" compiler before simulation
#   +nospecify         Disable specify path delays and timing checks
#   +notimingchecks    Disable timing checks
#   -nowarn <number>   Disable specified category of warning messages; verror 1907 to see them
#   +nowarn<CODE>      Disable specified warning message
#   -noconstimmedassert  Do not show constant immediate assertions in GUI/UCDB/reports etc.
#   -O0                Disable optimizations
#   -O1                Enable some optimizations
#   -O4                Enable most optimizations (default)
#   -O5                Enable additional compiler optimizations
#   -pedanticerrors    Enforce strict language checks
#   -permissive        Relax some language error checks to warnings.
#   -printinfilenames  Print path names for all source files opened during compilation.
#   +protect[=<file>]  Enable use of `protect...`endprotect compiler directives
#   -pslext            Enable PSL LTL/Universal operators
#   -pslfile <file>    Compile and bind PSL vunits specified by <file>
#   -quiet             Disable 'Loading' messages
#   -R [<simargs>]     Cause vsim to be invoked with <simargs> and top-level
#                      modules; simargs consists of the rest of the arguments
#                      or until a single-character dash is encountered
#   -                  Indicate end of optional -R <simargs>
#   -refresh           Refresh the library image from .dat file(s)
#   -scdpiheader <filename>
#                      Save the generated declarations of SystemVerilog SystemC DPI
#                      tasks and functions into <filename>
#   -sfcu              Single-file compilation unit (default),
#                      each file in command line is a separate compilation unit
#   -skipprotected     Ignore protected regions
#   -skipprotectedmodule Ignore modules containing protected regions
#   -source            Print the source line with error messages
#   -sv                Enable SystemVerilog features and keywords
#   -sv05compat        Ensure compatibility with IEEE standard 1800-2005
#   -sv09compat        Ensure compatibility with IEEE standard 1800-2009
#   -oldsv             Enable selected constructs no longer supported by the SystemVerilog standard
#   -svinputport=net|var|relaxed
#                      Select the default kind for an input port that is
#                      declared with a type, but without the var keyword.
#                      Select 'net' for strict LRM compliance, where the
#                      kind always defaults to wire. Select 'var' for
#                      non-compliant behavior, where the kind always defaults
#                      to var. The default is 'relaxed', where only a
#                      type that is a 4-state scalar or 4-state single
#                      dimension vector type defaults to wire.
#   -timescale <timescale>
#                      Specify the default timescale for modules not having an
#                      explicit timescale. The format of <timescale> is the same
#                      as that of the `timescale directive.
#                      For example, -timescale "1 ns / 1 ps".
#   -override_timescale <timescale>
#                      Override the timescale specified in the source code.
#   +typdelays         Use typical timing from min:typ:max expressions
#   -u                 Convert regular Verilog identifiers to uppercase
#   -v <path>          Specify Verilog source library file
#   -vlog95compat      Ensure compatibility with Std 1364-1995
#   -vlog01compat      Ensure compatibility with Std 1364-2001
#   -convertallparams  Enables converting parameters not defined in ANSI style
#                      to VHDL generics of type std_logic_vector, bit_vector,
#                      std_logic and bit.
#   -mixedsvvh [b | s | v] [packedstruct]
#                      Facilitates using a SV packages at the SV-VHDL mixed-language boundary.
#                         b - treat scalars/vectors in package as bit/bit_vector
#                         s - treat scalars/vectors in package as std_logic/std_logic_vector
#                         v - treat scalars/vectors in package as vl_logic/vl_logic_vector
#                         packedstruct - treat packed structures as VHDL arrays of equivalent size
#   -vopt              Run the "vopt" compiler before simulation
#   -y <path>          Specify Verilog source library directory
#   -vmake             Collects complete list of command line args and files processed for use by vmake.
#   -writetoplevels <fileName>
#                      Writes complete list of toplevels into <fileName> (also includes the name specified
#                      with -cuname). The file <fileName> can be used with vopt command's -f switch.
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/mem/mem_prog.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# ** Error: (vlog-7) Failed to open design unit file "../src/core/mem/mem_prog.v" in read mode.
# No such file or directory. (errno = ENOENT)
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/mem/mem_prog.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module progMem
# 
# Top level modules:
# 	progMem
vlog ../src/core/core_csr_unit/core_csr_unit_lis.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# ** Error: (vlog-7) Failed to open design unit file "../src/core/core_csr_unit/core_csr_unit_lis.v" in read mode.
# No such file or directory. (errno = ENOENT)
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_csr_unit/core_csr_unit.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# ** Error: ../src/core/core_csr_unit/core_csr_unit.v(5): Cannot find `include file "core_csr_unit_timer.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# -- Compiling module crs_unit
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_csr_unit/core_csr_unit.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# ** Error: ../src/core/core_csr_unit/core_csr_unit.v(5): Cannot find `include file "../src/core_csr_unit/core_csr_unit_timer.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# -- Compiling module crs_unit
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_csr_unit/core_csr_unit.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module crs_unit
# ** Error: ../src/core/core_csr_unit/core_csr_unit.v(54): Net type of 'csr_addr_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_csr_unit/core_csr_unit.v(55): Net type of 'csr_val_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_csr_unit/core_csr_unit.v(57): Net type of 'csr_op_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_csr_unit/core_csr_unit.v(51): Net type of 'rst_n' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_csr_unit/core_csr_unit.v(52): Net type of 'clk' must be explicitly declared (`default_nettype is "none").
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_csr_unit/core_csr_unit.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module crs_unit
# 
# Top level modules:
# 	crs_unit
vlog ../src/core/core_csr_unit/core_csr_unit_timer.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# ** Error: ../src/core/core_csr_unit/core_csr_unit_timer.v(3): Cannot find `include file "../../defines.vh" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# -- Compiling module timer
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_csr_unit/core_csr_unit_timer.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module timer
# ** Error: ../src/core/core_csr_unit/core_csr_unit_timer.v(24): Net type of 'val_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_csr_unit/core_csr_unit_timer.v(18): Net type of 'rst_n' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_csr_unit/core_csr_unit_timer.v(19): Net type of 'clk' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_csr_unit/core_csr_unit_timer.v(21): Net type of 'we_i' must be explicitly declared (`default_nettype is "none").
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_csr_unit/core_csr_unit_timer.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module timer
# 
# Top level modules:
# 	timer
vlog ../src/core/core_execution_unit/core_execution_unit_alu.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module alu
# ** Error: ../src/core/core_execution_unit/core_execution_unit_alu.v(41): Net type of 'zero_o' must be explicitly declared (`default_nettype is "none").
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_execution_unit/core_execution_unit_alu.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module alu
# 
# Top level modules:
# 	alu
vlog ../src/core/core_execution_unit/core_execution_unit_br.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module br
# 
# Top level modules:
# 	br
vlog ../src/core/core_execution_unit/core_execution_unit.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module executionUnit
# ** Error: ../src/core/core_execution_unit/core_execution_unit.v(81): Net type of 'val_mem_data_write_o' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit.v(83): Net type of 'addr_mem_data_o' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core_execution_unit/core_execution_unit.v(84): Net type of 'new_pc_offset_o' must be explicitly declared (`default_nettype is "none").
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_execution_unit/core_execution_unit.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module executionUnit
# 
# Top level modules:
# 	executionUnit
vlog ../src/core/core_program_counter.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module programCounter
# ** Error: ../src/core/core_program_counter.v(30): 'addr' already declared in this scope (programCounter).
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core_program_counter.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module programCounter
# 
# Top level modules:
# 	programCounter
vlog ../tb/arithmeticologic.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module arithmeticologic_test
# 
# Top level modules:
# 	arithmeticologic_test
vlog ../tb/testbench.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# ** Error: ../src/top.v(8): Cannot find `include file "../mem/mem_prog.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# ** Error: ../src/top.v(9): Cannot find `include file "../mem/mem_data.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# ** Error: ../src/core/core.v(8): Cannot find `include file "../defines.vh" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# ** Error: ../src/core/core.v(11): Cannot find `include file "core_control_unit.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# ** Error: ../src/core/core.v(12): Cannot find `include file "core_program_counter.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# ** Error: ../src/core/core.v(13): Cannot find `include file "core_regfile.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# ** Error: ../src/core/core.v(14): Cannot find `include file "core_execution_unit/core_execution_unit.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# ** Error: ../src/core/core.v(15): Cannot find `include file "core_csr_unit/core_csr_unit.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# -- Compiling module core
# -- Compiling module top
# -- Compiling module tb
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../tb/testbench.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module tb
# 
# Top level modules:
# 	tb
vlog ../src/mem/mem_data.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# ** Error: ../src/mem/mem_data.v(6): Cannot find `include file "../defines.vh" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# -- Compiling module dataMem
# ** Error: ../src/mem/mem_data.v(12): (vlog-2163) Macro `MEM_ADDR_WIDTH is undefined.
# ** Error: ../src/mem/mem_data.v(12): near ",": syntax error, unexpected ','
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/mem/mem_data.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module dataMem
# 
# Top level modules:
# 	dataMem
vlog ../src/core/core_regfile.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module regFile
# 
# Top level modules:
# 	regFile
vlog ../src/core/core_control_unit.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module controlUnit
# 
# Top level modules:
# 	controlUnit
vlog ../src/core/core.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# ** Error: ../src/core/core.v(11): Cannot find `include file "core_control_unit.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# ** Error: ../src/core/core.v(12): Cannot find `include file "core_program_counter.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# ** Error: ../src/core/core.v(13): Cannot find `include file "core_regfile.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# ** Error: ../src/core/core.v(14): Cannot find `include file "core_execution_unit/core_execution_unit.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# ** Error: ../src/core/core.v(15): Cannot find `include file "core_csr_unit/core_csr_unit.v" in directories:
#     C:/Program Files/questasim_10.0b/ovm-2.1.1/../verilog_src/ovm-2.1.1/src, C:/Program Files/questasim_10.0b/uvm-1.0p1/../verilog_src/uvm-1.0p1/src
# -- Compiling module core
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module core
# ** Error: ../src/core/core.v(61): Net type of 'addr_mem_data_o' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core.v(62): Net type of 'val_mem_data_read_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core.v(63): Net type of 'val_mem_data_write_o' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core.v(64): Net type of 'addr_mem_prog_o' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core.v(65): Net type of 'val_mem_prog_i' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core.v(67): Net type of 'write_transfer_mem_data_o' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core.v(57): Net type of 'clk' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core.v(58): Net type of 'rst_n' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/core/core.v(60): Net type of 'we_mem_data_o' must be explicitly declared (`default_nettype is "none").
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module core
# ** Error: ../src/core/core.v(60): Net type of 'we_mem_data_o' must be explicitly declared (`default_nettype is "none").
# C:/Program Files/questasim_10.0b/win32/vlog failed.
vlog ../src/core/core.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module core
# 
# Top level modules:
# 	core
vlog ../src/top.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module top
# ** Error: ../src/top.v(30): Net type of 'clk' must be explicitly declared (`default_nettype is "none").
# ** Error: ../src/top.v(31): Net type of 'rst_n' must be explicitly declared (`default_nettype is "none").
# C:/Program Files/questasim_10.0b/win32/vlog failed.

vlog ../src/top.v +define+CUSTOM_DEFINE
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module top
# 
# Top level modules:
# 	top
source .compile_files
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module progMem
# 
# Top level modules:
# 	progMem
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module dataMem
# 
# Top level modules:
# 	dataMem
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module lis
# 
# Top level modules:
# 	lis
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module alu
# 
# Top level modules:
# 	alu
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module br
# 
# Top level modules:
# 	br
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module executionUnit
# 
# Top level modules:
# 	executionUnit
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module crs_unit
# 
# Top level modules:
# 	crs_unit
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module timer
# 
# Top level modules:
# 	timer
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module programCounter
# 
# Top level modules:
# 	programCounter
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module regFile
# 
# Top level modules:
# 	regFile
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module controlUnit
# 
# Top level modules:
# 	controlUnit
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module core
# 
# Top level modules:
# 	core
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module top
# 
# Top level modules:
# 	top
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module arithmeticologic_test
# 
# Top level modules:
# 	arithmeticologic_test
# QuestaSim vlog 10.0b Compiler 2011.05 May  5 2011
# -- Compiling module tb
# 
# Top level modules:
# 	tb
# Optimization canceled
# Compile of arithmeticologic.v was successful.
# Compile of testbench.v was successful.
# Compile of core.v was successful.
# Compile of core_control_unit.v was successful.
# Compile of core_program_counter.v was successful.
# Compile of core_regfile.v was successful.
# Compile of core_csr_unit.v was successful.
# Compile of core_csr_unit_timer.v was successful.
# Compile of core_execution_unit.v was successful.
# Compile of core_execution_unit_alu.v was successful.
# Compile of core_execution_unit_br.v was successful.
# Compile of core_execution_unit_lis.v was successful.
# Compile of mem_data.v was successful.
# Compile of mem_prog.v was successful.
# Compile of top.v was successful.
# 15 compiles, 0 failed with no errors. 
# Optimization canceled
vsim -gui work.arithmeticologic_test
# vsim -gui work.arithmeticologic_test 
# ** Note: (vsim-3812) Design is being optimized...
# ** Warning: C:/Users/raimo/Documents/RISCV/TFG-Pau/RV32i-Verilog-master/tb/testbench.v(23): (vopt-2685) [TFMPC] - Too few port connections for 'top_inst'.  Expected 3, found 2.
# Loading work.arithmeticologic_test(fast)
run -all
# ** Warning: (vsim-7) Failed to open readmem file "data/dataMem_h.mem" in read mode.
# No such file or directory. (errno = ENOENT)    : C:/Users/raimo/Documents/RISCV/TFG-Pau/RV32i-Verilog-master/tb/arithmeticologic.v(27)
#    Time: 100 ns  Iteration: 0  Instance: /arithmeticologic_test
# ADD Test
# mem[         0] = 00000000010100000000000110010011
# mem[         4] = 00000000000000000000000000000000
# mem[         8] = 00000000000000000000000000000000
# Ilegal OPCODE
#     OK: reg5 is : 00000007
# AND Test
# mem[         0] = 11111111111100000000000110010011
# mem[         4] = 00000000000000000000000000000000
# mem[         8] = 00000000000000000000000000000000
# Ilegal OPCODE
#     OK: reg5 is : 000000ff
# ANDI Test
# mem[         0] = 01000100010000000000000110010011
# mem[         4] = 00000000000000000000000000000000
# Ilegal OPCODE
#     OK: reg5 is : 00000404
# SLLI Test
# mem[         0] = 00000000001100000000000110010011
# mem[         4] = 00000000000000000000000000000000
# Ilegal OPCODE
#     OK: reg5 is : 0000000c
# SLTI Test
# mem[         0] = 11111111110000000000000110010011
# mem[         4] = 00000000000000000000000000000000
# mem[         8] = 00000000000000000000000000000000
# Ilegal OPCODE
#     OK: reg5 is : 00000001
#     OK: reg6 is : 00000001
# SLTIU Test
# mem[         0] = 11111111110000000000000110010011
# mem[         4] = 00000000000000000000000000000000
# mem[         8] = 00000000000000000000000000000000
# Ilegal OPCODE
#     OK: reg5 is : 00000001
#     OK: reg3 is : 00000000
# ** Note: $finish    : C:/Users/raimo/Documents/RISCV/TFG-Pau/RV32i-Verilog-master/tb/arithmeticologic.v(51)
#    Time: 2800 ns  Iteration: 0  Instance: /arithmeticologic_test
# 1
# Break at C:/Users/raimo/Documents/RISCV/TFG-Pau/RV32i-Verilog-master/tb/arithmeticologic.v line 51
# Load canceled
# Compile of arithmeticologic.v was successful.
# Compile of testbench.v was successful.
# Compile of core.v was successful.
# Compile of core_control_unit.v was successful.
# Compile of core_program_counter.v was successful.
# Compile of core_regfile.v was successful.
# Compile of core_csr_unit.v was successful.
# Compile of core_csr_unit_timer.v was successful.
# Compile of core_execution_unit.v was successful.
# Compile of core_execution_unit_alu.v was successful.
# Compile of core_execution_unit_br.v was successful.
# Compile of core_execution_unit_lis.v was successful.
# Compile of mem_data.v was successful.
# Compile of mem_prog.v was successful.
# Compile of top.v was successful.
# 15 compiles, 0 failed with no errors. 
vsim -gui -novopt work.arithmeticologic_test
# vsim -gui -novopt work.arithmeticologic_test 
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.arithmeticologic_test
# Loading work.arithmeticologic_test
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.tb
# Loading work.tb
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.top
# Loading work.top
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.core
# Loading work.core
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.controlUnit
# Loading work.controlUnit
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.programCounter
# Loading work.programCounter
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.regFile
# Loading work.regFile
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.executionUnit
# Loading work.executionUnit
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.alu
# Loading work.alu
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.lis
# Loading work.lis
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.br
# Loading work.br
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.crs_unit
# Loading work.crs_unit
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.timer
# Loading work.timer
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.dataMem
# Loading work.dataMem
# Refreshing C:\Users\raimo\Documents\RISCV\TFG-Pau\RV32i-Verilog-master\sim\work.progMem
# Loading work.progMem
# ** Warning: (vsim-3017) C:/Users/raimo/Documents/RISCV/TFG-Pau/RV32i-Verilog-master/tb/testbench.v(23): [TFMPC] - Too few port connections. Expected 3, found 2.
#         Region: /arithmeticologic_test/TB/top_inst
run -all
# ** Warning: (vsim-7) Failed to open readmem file "data/dataMem_h.mem" in read mode.
# No such file or directory. (errno = ENOENT)    : C:/Users/raimo/Documents/RISCV/TFG-Pau/RV32i-Verilog-master/tb/arithmeticologic.v(27)
#    Time: 100 ns  Iteration: 0  Instance: /arithmeticologic_test
# ADD Test
# mem[         0] = 00000000010100000000000110010011
# mem[         4] = 00000000000000000000000000000000
# mem[         8] = 00000000000000000000000000000000
# Ilegal OPCODE
#     OK: reg5 is : 00000007
# AND Test
# mem[         0] = 11111111111100000000000110010011
# mem[         4] = 00000000000000000000000000000000
# mem[         8] = 00000000000000000000000000000000
# Ilegal OPCODE
#     OK: reg5 is : 000000ff
# ANDI Test
# mem[         0] = 01000100010000000000000110010011
# mem[         4] = 00000000000000000000000000000000
# Ilegal OPCODE
#     OK: reg5 is : 00000404
# SLLI Test
# mem[         0] = 00000000001100000000000110010011
# mem[         4] = 00000000000000000000000000000000
# Ilegal OPCODE
#     OK: reg5 is : 0000000c
# SLTI Test
# mem[         0] = 11111111110000000000000110010011
# mem[         4] = 00000000000000000000000000000000
# mem[         8] = 00000000000000000000000000000000
# Ilegal OPCODE
#     OK: reg5 is : 00000001
#     OK: reg6 is : 00000001
# SLTIU Test
# mem[         0] = 11111111110000000000000110010011
# mem[         4] = 00000000000000000000000000000000
# mem[         8] = 00000000000000000000000000000000
# Ilegal OPCODE
#     OK: reg5 is : 00000001
#     OK: reg3 is : 00000000
# ** Note: $finish    : C:/Users/raimo/Documents/RISCV/TFG-Pau/RV32i-Verilog-master/tb/arithmeticologic.v(51)
#    Time: 2800 ns  Iteration: 0  Instance: /arithmeticologic_test
# 1
# Break in Module arithmeticologic_test at C:/Users/raimo/Documents/RISCV/TFG-Pau/RV32i-Verilog-master/tb/arithmeticologic.v line 51
