// megafunction wizard: %LPM_MULT%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: lpm_mult 

// ============================================================
// File Name: LPM_MULT32.v
// Megafunction Name(s):
// 			lpm_mult
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 13.1.0 Build 162 10/23/2013 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2013 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//lpm_mult DEDICATED_MULTIPLIER_CIRCUITRY="YES" DEVICE_FAMILY="Cyclone III" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTHA=32 LPM_WIDTHB=32 LPM_WIDTHP=64 MAXIMIZE_SPEED=9 dataa datab result
//VERSION_BEGIN 13.1 cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//adder DEVICE_FAMILY="Cyclone III" WIDTH=47 dataa datab result
//VERSION_BEGIN 13.1 cbx_mgl 2013:10:23:18:06:54:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone III" WIDTH=33 dataa datab result
//VERSION_BEGIN 13.1 cbx_mgl 2013:10:23:18:06:54:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = dsp_9bit 8 lut 80 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  LPM_MULT32_mult
	( 
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   [31:0]  dataa;
	input   [31:0]  datab;
	output   [63:0]  result;

	wire	[46:0]	wire_add13_result;
	wire	[32:0]	wire_add9_result;
	wire  [35:0]   wire_mac_mult1_dataout;
	wire  [31:0]   wire_mac_mult3_dataout;
	wire  [31:0]   wire_mac_mult5_dataout;
	wire  [27:0]   wire_mac_mult7_dataout;
	wire  [35:0]   wire_mac_out2_dataout;
	wire  [31:0]   wire_mac_out4_dataout;
	wire  [31:0]   wire_mac_out6_dataout;
	wire  [27:0]   wire_mac_out8_dataout;
	wire  [32:0]   wire_sft10a_in;
	wire  [32:0]   wire_sft10a_out;
	wire  [32:0]   wire_sft11a_in;
	wire  [32:0]   wire_sft11a_out;
	wire  [32:0]   wire_sft12a_in;
	wire  [32:0]   wire_sft12a_out;
	wire  [46:0]   wire_sft14a_in;
	wire  [46:0]   wire_sft14a_out;
	wire  [46:0]   wire_sft15a_in;
	wire  [46:0]   wire_sft15a_out;
	wire  [46:0]   wire_sft16a_in;
	wire  [46:0]   wire_sft16a_out;
	wire  w255w;
	wire  [64:0]  w513w;

	assign
		wire_add13_result = wire_sft14a_out + wire_sft15a_out;
	assign
		wire_add9_result = wire_sft10a_out + wire_sft11a_out;
	cycloneiii_mac_mult   mac_mult1
	( 
	.dataa({dataa[17:0]}),
	.datab({datab[17:0]}),
	.dataout(wire_mac_mult1_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult1.dataa_clock = "none",
		mac_mult1.dataa_width = 18,
		mac_mult1.datab_clock = "none",
		mac_mult1.datab_width = 18,
		mac_mult1.signa_clock = "none",
		mac_mult1.signb_clock = "none",
		mac_mult1.lpm_type = "cycloneiii_mac_mult";
	cycloneiii_mac_mult   mac_mult3
	( 
	.dataa({dataa[17:0]}),
	.datab({datab[31:18]}),
	.dataout(wire_mac_mult3_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult3.dataa_clock = "none",
		mac_mult3.dataa_width = 18,
		mac_mult3.datab_clock = "none",
		mac_mult3.datab_width = 14,
		mac_mult3.signa_clock = "none",
		mac_mult3.signb_clock = "none",
		mac_mult3.lpm_type = "cycloneiii_mac_mult";
	cycloneiii_mac_mult   mac_mult5
	( 
	.dataa({dataa[31:18]}),
	.datab({datab[17:0]}),
	.dataout(wire_mac_mult5_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult5.dataa_clock = "none",
		mac_mult5.dataa_width = 14,
		mac_mult5.datab_clock = "none",
		mac_mult5.datab_width = 18,
		mac_mult5.signa_clock = "none",
		mac_mult5.signb_clock = "none",
		mac_mult5.lpm_type = "cycloneiii_mac_mult";
	cycloneiii_mac_mult   mac_mult7
	( 
	.dataa({dataa[31:18]}),
	.datab({datab[31:18]}),
	.dataout(wire_mac_mult7_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult7.dataa_clock = "none",
		mac_mult7.dataa_width = 14,
		mac_mult7.datab_clock = "none",
		mac_mult7.datab_width = 14,
		mac_mult7.signa_clock = "none",
		mac_mult7.signb_clock = "none",
		mac_mult7.lpm_type = "cycloneiii_mac_mult";
	cycloneiii_mac_out   mac_out2
	( 
	.dataa(wire_mac_mult1_dataout),
	.dataout(wire_mac_out2_dataout)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out2.dataa_width = 36,
		mac_out2.output_clock = "none",
		mac_out2.lpm_type = "cycloneiii_mac_out";
	cycloneiii_mac_out   mac_out4
	( 
	.dataa(wire_mac_mult3_dataout),
	.dataout(wire_mac_out4_dataout)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out4.dataa_width = 32,
		mac_out4.output_clock = "none",
		mac_out4.lpm_type = "cycloneiii_mac_out";
	cycloneiii_mac_out   mac_out6
	( 
	.dataa(wire_mac_mult5_dataout),
	.dataout(wire_mac_out6_dataout)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out6.dataa_width = 32,
		mac_out6.output_clock = "none",
		mac_out6.lpm_type = "cycloneiii_mac_out";
	cycloneiii_mac_out   mac_out8
	( 
	.dataa(wire_mac_mult7_dataout),
	.dataout(wire_mac_out8_dataout)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out8.dataa_width = 28,
		mac_out8.output_clock = "none",
		mac_out8.lpm_type = "cycloneiii_mac_out";
	soft   sft10a_0
	( 
	.in(wire_sft10a_in[0:0]),
	.out(wire_sft10a_out[0:0]));
	soft   sft10a_1
	( 
	.in(wire_sft10a_in[1:1]),
	.out(wire_sft10a_out[1:1]));
	soft   sft10a_2
	( 
	.in(wire_sft10a_in[2:2]),
	.out(wire_sft10a_out[2:2]));
	soft   sft10a_3
	( 
	.in(wire_sft10a_in[3:3]),
	.out(wire_sft10a_out[3:3]));
	soft   sft10a_4
	( 
	.in(wire_sft10a_in[4:4]),
	.out(wire_sft10a_out[4:4]));
	soft   sft10a_5
	( 
	.in(wire_sft10a_in[5:5]),
	.out(wire_sft10a_out[5:5]));
	soft   sft10a_6
	( 
	.in(wire_sft10a_in[6:6]),
	.out(wire_sft10a_out[6:6]));
	soft   sft10a_7
	( 
	.in(wire_sft10a_in[7:7]),
	.out(wire_sft10a_out[7:7]));
	soft   sft10a_8
	( 
	.in(wire_sft10a_in[8:8]),
	.out(wire_sft10a_out[8:8]));
	soft   sft10a_9
	( 
	.in(wire_sft10a_in[9:9]),
	.out(wire_sft10a_out[9:9]));
	soft   sft10a_10
	( 
	.in(wire_sft10a_in[10:10]),
	.out(wire_sft10a_out[10:10]));
	soft   sft10a_11
	( 
	.in(wire_sft10a_in[11:11]),
	.out(wire_sft10a_out[11:11]));
	soft   sft10a_12
	( 
	.in(wire_sft10a_in[12:12]),
	.out(wire_sft10a_out[12:12]));
	soft   sft10a_13
	( 
	.in(wire_sft10a_in[13:13]),
	.out(wire_sft10a_out[13:13]));
	soft   sft10a_14
	( 
	.in(wire_sft10a_in[14:14]),
	.out(wire_sft10a_out[14:14]));
	soft   sft10a_15
	( 
	.in(wire_sft10a_in[15:15]),
	.out(wire_sft10a_out[15:15]));
	soft   sft10a_16
	( 
	.in(wire_sft10a_in[16:16]),
	.out(wire_sft10a_out[16:16]));
	soft   sft10a_17
	( 
	.in(wire_sft10a_in[17:17]),
	.out(wire_sft10a_out[17:17]));
	soft   sft10a_18
	( 
	.in(wire_sft10a_in[18:18]),
	.out(wire_sft10a_out[18:18]));
	soft   sft10a_19
	( 
	.in(wire_sft10a_in[19:19]),
	.out(wire_sft10a_out[19:19]));
	soft   sft10a_20
	( 
	.in(wire_sft10a_in[20:20]),
	.out(wire_sft10a_out[20:20]));
	soft   sft10a_21
	( 
	.in(wire_sft10a_in[21:21]),
	.out(wire_sft10a_out[21:21]));
	soft   sft10a_22
	( 
	.in(wire_sft10a_in[22:22]),
	.out(wire_sft10a_out[22:22]));
	soft   sft10a_23
	( 
	.in(wire_sft10a_in[23:23]),
	.out(wire_sft10a_out[23:23]));
	soft   sft10a_24
	( 
	.in(wire_sft10a_in[24:24]),
	.out(wire_sft10a_out[24:24]));
	soft   sft10a_25
	( 
	.in(wire_sft10a_in[25:25]),
	.out(wire_sft10a_out[25:25]));
	soft   sft10a_26
	( 
	.in(wire_sft10a_in[26:26]),
	.out(wire_sft10a_out[26:26]));
	soft   sft10a_27
	( 
	.in(wire_sft10a_in[27:27]),
	.out(wire_sft10a_out[27:27]));
	soft   sft10a_28
	( 
	.in(wire_sft10a_in[28:28]),
	.out(wire_sft10a_out[28:28]));
	soft   sft10a_29
	( 
	.in(wire_sft10a_in[29:29]),
	.out(wire_sft10a_out[29:29]));
	soft   sft10a_30
	( 
	.in(wire_sft10a_in[30:30]),
	.out(wire_sft10a_out[30:30]));
	soft   sft10a_31
	( 
	.in(wire_sft10a_in[31:31]),
	.out(wire_sft10a_out[31:31]));
	soft   sft10a_32
	( 
	.in(wire_sft10a_in[32:32]),
	.out(wire_sft10a_out[32:32]));
	assign
		wire_sft10a_in = {w255w, {wire_mac_out8_dataout[13], {wire_mac_out8_dataout[12], {wire_mac_out8_dataout[11], {wire_mac_out8_dataout[10], {wire_mac_out8_dataout[9], {wire_mac_out8_dataout[8], {wire_mac_out8_dataout[7], {wire_mac_out8_dataout[6], {wire_mac_out8_dataout[5], {wire_mac_out8_dataout[4], {wire_mac_out8_dataout[3], {wire_mac_out8_dataout[2], {wire_mac_out8_dataout[1], {wire_mac_out8_dataout[0], {wire_mac_out6_dataout[17], {wire_mac_out6_dataout[16], {wire_mac_out6_dataout[15], {wire_mac_out6_dataout[14], {wire_mac_out6_dataout[13], {wire_mac_out6_dataout[12], {wire_mac_out6_dataout[11], {wire_mac_out6_dataout[10], {wire_mac_out6_dataout[9], {wire_mac_out6_dataout[8], {wire_mac_out6_dataout[7], {wire_mac_out6_dataout[6], {wire_mac_out6_dataout[5], {wire_mac_out6_dataout[4], {wire_mac_out6_dataout[3], {wire_mac_out6_dataout[2], {wire_mac_out6_dataout[1:0]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft11a_0
	( 
	.in(wire_sft11a_in[0:0]),
	.out(wire_sft11a_out[0:0]));
	soft   sft11a_1
	( 
	.in(wire_sft11a_in[1:1]),
	.out(wire_sft11a_out[1:1]));
	soft   sft11a_2
	( 
	.in(wire_sft11a_in[2:2]),
	.out(wire_sft11a_out[2:2]));
	soft   sft11a_3
	( 
	.in(wire_sft11a_in[3:3]),
	.out(wire_sft11a_out[3:3]));
	soft   sft11a_4
	( 
	.in(wire_sft11a_in[4:4]),
	.out(wire_sft11a_out[4:4]));
	soft   sft11a_5
	( 
	.in(wire_sft11a_in[5:5]),
	.out(wire_sft11a_out[5:5]));
	soft   sft11a_6
	( 
	.in(wire_sft11a_in[6:6]),
	.out(wire_sft11a_out[6:6]));
	soft   sft11a_7
	( 
	.in(wire_sft11a_in[7:7]),
	.out(wire_sft11a_out[7:7]));
	soft   sft11a_8
	( 
	.in(wire_sft11a_in[8:8]),
	.out(wire_sft11a_out[8:8]));
	soft   sft11a_9
	( 
	.in(wire_sft11a_in[9:9]),
	.out(wire_sft11a_out[9:9]));
	soft   sft11a_10
	( 
	.in(wire_sft11a_in[10:10]),
	.out(wire_sft11a_out[10:10]));
	soft   sft11a_11
	( 
	.in(wire_sft11a_in[11:11]),
	.out(wire_sft11a_out[11:11]));
	soft   sft11a_12
	( 
	.in(wire_sft11a_in[12:12]),
	.out(wire_sft11a_out[12:12]));
	soft   sft11a_13
	( 
	.in(wire_sft11a_in[13:13]),
	.out(wire_sft11a_out[13:13]));
	soft   sft11a_14
	( 
	.in(wire_sft11a_in[14:14]),
	.out(wire_sft11a_out[14:14]));
	soft   sft11a_15
	( 
	.in(wire_sft11a_in[15:15]),
	.out(wire_sft11a_out[15:15]));
	soft   sft11a_16
	( 
	.in(wire_sft11a_in[16:16]),
	.out(wire_sft11a_out[16:16]));
	soft   sft11a_17
	( 
	.in(wire_sft11a_in[17:17]),
	.out(wire_sft11a_out[17:17]));
	soft   sft11a_18
	( 
	.in(wire_sft11a_in[18:18]),
	.out(wire_sft11a_out[18:18]));
	soft   sft11a_19
	( 
	.in(wire_sft11a_in[19:19]),
	.out(wire_sft11a_out[19:19]));
	soft   sft11a_20
	( 
	.in(wire_sft11a_in[20:20]),
	.out(wire_sft11a_out[20:20]));
	soft   sft11a_21
	( 
	.in(wire_sft11a_in[21:21]),
	.out(wire_sft11a_out[21:21]));
	soft   sft11a_22
	( 
	.in(wire_sft11a_in[22:22]),
	.out(wire_sft11a_out[22:22]));
	soft   sft11a_23
	( 
	.in(wire_sft11a_in[23:23]),
	.out(wire_sft11a_out[23:23]));
	soft   sft11a_24
	( 
	.in(wire_sft11a_in[24:24]),
	.out(wire_sft11a_out[24:24]));
	soft   sft11a_25
	( 
	.in(wire_sft11a_in[25:25]),
	.out(wire_sft11a_out[25:25]));
	soft   sft11a_26
	( 
	.in(wire_sft11a_in[26:26]),
	.out(wire_sft11a_out[26:26]));
	soft   sft11a_27
	( 
	.in(wire_sft11a_in[27:27]),
	.out(wire_sft11a_out[27:27]));
	soft   sft11a_28
	( 
	.in(wire_sft11a_in[28:28]),
	.out(wire_sft11a_out[28:28]));
	soft   sft11a_29
	( 
	.in(wire_sft11a_in[29:29]),
	.out(wire_sft11a_out[29:29]));
	soft   sft11a_30
	( 
	.in(wire_sft11a_in[30:30]),
	.out(wire_sft11a_out[30:30]));
	soft   sft11a_31
	( 
	.in(wire_sft11a_in[31:31]),
	.out(wire_sft11a_out[31:31]));
	soft   sft11a_32
	( 
	.in(wire_sft11a_in[32:32]),
	.out(wire_sft11a_out[32:32]));
	assign
		wire_sft11a_in = {w255w, {wire_mac_out6_dataout[31], {wire_mac_out6_dataout[30], {wire_mac_out6_dataout[29], {wire_mac_out6_dataout[28], {wire_mac_out6_dataout[27], {wire_mac_out6_dataout[26], {wire_mac_out6_dataout[25], {wire_mac_out6_dataout[24], {wire_mac_out6_dataout[23], {wire_mac_out6_dataout[22], {wire_mac_out6_dataout[21], {wire_mac_out6_dataout[20], {wire_mac_out6_dataout[19], {wire_mac_out6_dataout[18], {wire_mac_out4_dataout[17], {wire_mac_out4_dataout[16], {wire_mac_out4_dataout[15], {wire_mac_out4_dataout[14], {wire_mac_out4_dataout[13], {wire_mac_out4_dataout[12], {wire_mac_out4_dataout[11], {wire_mac_out4_dataout[10], {wire_mac_out4_dataout[9], {wire_mac_out4_dataout[8], {wire_mac_out4_dataout[7], {wire_mac_out4_dataout[6], {wire_mac_out4_dataout[5], {wire_mac_out4_dataout[4], {wire_mac_out4_dataout[3], {wire_mac_out4_dataout[2], {wire_mac_out4_dataout[1:0]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft12a_0
	( 
	.in(wire_sft12a_in[0:0]),
	.out(wire_sft12a_out[0:0]));
	soft   sft12a_1
	( 
	.in(wire_sft12a_in[1:1]),
	.out(wire_sft12a_out[1:1]));
	soft   sft12a_2
	( 
	.in(wire_sft12a_in[2:2]),
	.out(wire_sft12a_out[2:2]));
	soft   sft12a_3
	( 
	.in(wire_sft12a_in[3:3]),
	.out(wire_sft12a_out[3:3]));
	soft   sft12a_4
	( 
	.in(wire_sft12a_in[4:4]),
	.out(wire_sft12a_out[4:4]));
	soft   sft12a_5
	( 
	.in(wire_sft12a_in[5:5]),
	.out(wire_sft12a_out[5:5]));
	soft   sft12a_6
	( 
	.in(wire_sft12a_in[6:6]),
	.out(wire_sft12a_out[6:6]));
	soft   sft12a_7
	( 
	.in(wire_sft12a_in[7:7]),
	.out(wire_sft12a_out[7:7]));
	soft   sft12a_8
	( 
	.in(wire_sft12a_in[8:8]),
	.out(wire_sft12a_out[8:8]));
	soft   sft12a_9
	( 
	.in(wire_sft12a_in[9:9]),
	.out(wire_sft12a_out[9:9]));
	soft   sft12a_10
	( 
	.in(wire_sft12a_in[10:10]),
	.out(wire_sft12a_out[10:10]));
	soft   sft12a_11
	( 
	.in(wire_sft12a_in[11:11]),
	.out(wire_sft12a_out[11:11]));
	soft   sft12a_12
	( 
	.in(wire_sft12a_in[12:12]),
	.out(wire_sft12a_out[12:12]));
	soft   sft12a_13
	( 
	.in(wire_sft12a_in[13:13]),
	.out(wire_sft12a_out[13:13]));
	soft   sft12a_14
	( 
	.in(wire_sft12a_in[14:14]),
	.out(wire_sft12a_out[14:14]));
	soft   sft12a_15
	( 
	.in(wire_sft12a_in[15:15]),
	.out(wire_sft12a_out[15:15]));
	soft   sft12a_16
	( 
	.in(wire_sft12a_in[16:16]),
	.out(wire_sft12a_out[16:16]));
	soft   sft12a_17
	( 
	.in(wire_sft12a_in[17:17]),
	.out(wire_sft12a_out[17:17]));
	soft   sft12a_18
	( 
	.in(wire_sft12a_in[18:18]),
	.out(wire_sft12a_out[18:18]));
	soft   sft12a_19
	( 
	.in(wire_sft12a_in[19:19]),
	.out(wire_sft12a_out[19:19]));
	soft   sft12a_20
	( 
	.in(wire_sft12a_in[20:20]),
	.out(wire_sft12a_out[20:20]));
	soft   sft12a_21
	( 
	.in(wire_sft12a_in[21:21]),
	.out(wire_sft12a_out[21:21]));
	soft   sft12a_22
	( 
	.in(wire_sft12a_in[22:22]),
	.out(wire_sft12a_out[22:22]));
	soft   sft12a_23
	( 
	.in(wire_sft12a_in[23:23]),
	.out(wire_sft12a_out[23:23]));
	soft   sft12a_24
	( 
	.in(wire_sft12a_in[24:24]),
	.out(wire_sft12a_out[24:24]));
	soft   sft12a_25
	( 
	.in(wire_sft12a_in[25:25]),
	.out(wire_sft12a_out[25:25]));
	soft   sft12a_26
	( 
	.in(wire_sft12a_in[26:26]),
	.out(wire_sft12a_out[26:26]));
	soft   sft12a_27
	( 
	.in(wire_sft12a_in[27:27]),
	.out(wire_sft12a_out[27:27]));
	soft   sft12a_28
	( 
	.in(wire_sft12a_in[28:28]),
	.out(wire_sft12a_out[28:28]));
	soft   sft12a_29
	( 
	.in(wire_sft12a_in[29:29]),
	.out(wire_sft12a_out[29:29]));
	soft   sft12a_30
	( 
	.in(wire_sft12a_in[30:30]),
	.out(wire_sft12a_out[30:30]));
	soft   sft12a_31
	( 
	.in(wire_sft12a_in[31:31]),
	.out(wire_sft12a_out[31:31]));
	soft   sft12a_32
	( 
	.in(wire_sft12a_in[32:32]),
	.out(wire_sft12a_out[32:32]));
	assign
		wire_sft12a_in = wire_add9_result;
	soft   sft14a_0
	( 
	.in(wire_sft14a_in[0:0]),
	.out(wire_sft14a_out[0:0]));
	soft   sft14a_1
	( 
	.in(wire_sft14a_in[1:1]),
	.out(wire_sft14a_out[1:1]));
	soft   sft14a_2
	( 
	.in(wire_sft14a_in[2:2]),
	.out(wire_sft14a_out[2:2]));
	soft   sft14a_3
	( 
	.in(wire_sft14a_in[3:3]),
	.out(wire_sft14a_out[3:3]));
	soft   sft14a_4
	( 
	.in(wire_sft14a_in[4:4]),
	.out(wire_sft14a_out[4:4]));
	soft   sft14a_5
	( 
	.in(wire_sft14a_in[5:5]),
	.out(wire_sft14a_out[5:5]));
	soft   sft14a_6
	( 
	.in(wire_sft14a_in[6:6]),
	.out(wire_sft14a_out[6:6]));
	soft   sft14a_7
	( 
	.in(wire_sft14a_in[7:7]),
	.out(wire_sft14a_out[7:7]));
	soft   sft14a_8
	( 
	.in(wire_sft14a_in[8:8]),
	.out(wire_sft14a_out[8:8]));
	soft   sft14a_9
	( 
	.in(wire_sft14a_in[9:9]),
	.out(wire_sft14a_out[9:9]));
	soft   sft14a_10
	( 
	.in(wire_sft14a_in[10:10]),
	.out(wire_sft14a_out[10:10]));
	soft   sft14a_11
	( 
	.in(wire_sft14a_in[11:11]),
	.out(wire_sft14a_out[11:11]));
	soft   sft14a_12
	( 
	.in(wire_sft14a_in[12:12]),
	.out(wire_sft14a_out[12:12]));
	soft   sft14a_13
	( 
	.in(wire_sft14a_in[13:13]),
	.out(wire_sft14a_out[13:13]));
	soft   sft14a_14
	( 
	.in(wire_sft14a_in[14:14]),
	.out(wire_sft14a_out[14:14]));
	soft   sft14a_15
	( 
	.in(wire_sft14a_in[15:15]),
	.out(wire_sft14a_out[15:15]));
	soft   sft14a_16
	( 
	.in(wire_sft14a_in[16:16]),
	.out(wire_sft14a_out[16:16]));
	soft   sft14a_17
	( 
	.in(wire_sft14a_in[17:17]),
	.out(wire_sft14a_out[17:17]));
	soft   sft14a_18
	( 
	.in(wire_sft14a_in[18:18]),
	.out(wire_sft14a_out[18:18]));
	soft   sft14a_19
	( 
	.in(wire_sft14a_in[19:19]),
	.out(wire_sft14a_out[19:19]));
	soft   sft14a_20
	( 
	.in(wire_sft14a_in[20:20]),
	.out(wire_sft14a_out[20:20]));
	soft   sft14a_21
	( 
	.in(wire_sft14a_in[21:21]),
	.out(wire_sft14a_out[21:21]));
	soft   sft14a_22
	( 
	.in(wire_sft14a_in[22:22]),
	.out(wire_sft14a_out[22:22]));
	soft   sft14a_23
	( 
	.in(wire_sft14a_in[23:23]),
	.out(wire_sft14a_out[23:23]));
	soft   sft14a_24
	( 
	.in(wire_sft14a_in[24:24]),
	.out(wire_sft14a_out[24:24]));
	soft   sft14a_25
	( 
	.in(wire_sft14a_in[25:25]),
	.out(wire_sft14a_out[25:25]));
	soft   sft14a_26
	( 
	.in(wire_sft14a_in[26:26]),
	.out(wire_sft14a_out[26:26]));
	soft   sft14a_27
	( 
	.in(wire_sft14a_in[27:27]),
	.out(wire_sft14a_out[27:27]));
	soft   sft14a_28
	( 
	.in(wire_sft14a_in[28:28]),
	.out(wire_sft14a_out[28:28]));
	soft   sft14a_29
	( 
	.in(wire_sft14a_in[29:29]),
	.out(wire_sft14a_out[29:29]));
	soft   sft14a_30
	( 
	.in(wire_sft14a_in[30:30]),
	.out(wire_sft14a_out[30:30]));
	soft   sft14a_31
	( 
	.in(wire_sft14a_in[31:31]),
	.out(wire_sft14a_out[31:31]));
	soft   sft14a_32
	( 
	.in(wire_sft14a_in[32:32]),
	.out(wire_sft14a_out[32:32]));
	soft   sft14a_33
	( 
	.in(wire_sft14a_in[33:33]),
	.out(wire_sft14a_out[33:33]));
	soft   sft14a_34
	( 
	.in(wire_sft14a_in[34:34]),
	.out(wire_sft14a_out[34:34]));
	soft   sft14a_35
	( 
	.in(wire_sft14a_in[35:35]),
	.out(wire_sft14a_out[35:35]));
	soft   sft14a_36
	( 
	.in(wire_sft14a_in[36:36]),
	.out(wire_sft14a_out[36:36]));
	soft   sft14a_37
	( 
	.in(wire_sft14a_in[37:37]),
	.out(wire_sft14a_out[37:37]));
	soft   sft14a_38
	( 
	.in(wire_sft14a_in[38:38]),
	.out(wire_sft14a_out[38:38]));
	soft   sft14a_39
	( 
	.in(wire_sft14a_in[39:39]),
	.out(wire_sft14a_out[39:39]));
	soft   sft14a_40
	( 
	.in(wire_sft14a_in[40:40]),
	.out(wire_sft14a_out[40:40]));
	soft   sft14a_41
	( 
	.in(wire_sft14a_in[41:41]),
	.out(wire_sft14a_out[41:41]));
	soft   sft14a_42
	( 
	.in(wire_sft14a_in[42:42]),
	.out(wire_sft14a_out[42:42]));
	soft   sft14a_43
	( 
	.in(wire_sft14a_in[43:43]),
	.out(wire_sft14a_out[43:43]));
	soft   sft14a_44
	( 
	.in(wire_sft14a_in[44:44]),
	.out(wire_sft14a_out[44:44]));
	soft   sft14a_45
	( 
	.in(wire_sft14a_in[45:45]),
	.out(wire_sft14a_out[45:45]));
	soft   sft14a_46
	( 
	.in(wire_sft14a_in[46:46]),
	.out(wire_sft14a_out[46:46]));
	assign
		wire_sft14a_in = {w255w, {wire_mac_out8_dataout[27], {wire_mac_out8_dataout[26], {wire_mac_out8_dataout[25], {wire_mac_out8_dataout[24], {wire_mac_out8_dataout[23], {wire_mac_out8_dataout[22], {wire_mac_out8_dataout[21], {wire_mac_out8_dataout[20], {wire_mac_out8_dataout[19], {wire_mac_out8_dataout[18], {wire_mac_out8_dataout[17], {wire_mac_out8_dataout[16], {wire_mac_out8_dataout[15], {wire_mac_out8_dataout[14], {wire_mac_out4_dataout[31], {wire_mac_out4_dataout[30], {wire_mac_out4_dataout[29], {wire_mac_out4_dataout[28], {wire_mac_out4_dataout[27], {wire_mac_out4_dataout[26], {wire_mac_out4_dataout[25], {wire_mac_out4_dataout[24], {wire_mac_out4_dataout[23], {wire_mac_out4_dataout[22], {wire_mac_out4_dataout[21], {wire_mac_out4_dataout[20], {wire_mac_out4_dataout[19], {wire_mac_out4_dataout[18], {wire_mac_out2_dataout[35], {wire_mac_out2_dataout[34], {wire_mac_out2_dataout[33], {wire_mac_out2_dataout[32], {wire_mac_out2_dataout[31], {wire_mac_out2_dataout[30], {wire_mac_out2_dataout[29], {wire_mac_out2_dataout[28], {wire_mac_out2_dataout[27], {wire_mac_out2_dataout[26], {wire_mac_out2_dataout[25], {wire_mac_out2_dataout[24], {wire_mac_out2_dataout[23], {wire_mac_out2_dataout[22], {wire_mac_out2_dataout[21], {wire_mac_out2_dataout[20], {wire_mac_out2_dataout[19:18]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft15a_0
	( 
	.in(wire_sft15a_in[0:0]),
	.out(wire_sft15a_out[0:0]));
	soft   sft15a_1
	( 
	.in(wire_sft15a_in[1:1]),
	.out(wire_sft15a_out[1:1]));
	soft   sft15a_2
	( 
	.in(wire_sft15a_in[2:2]),
	.out(wire_sft15a_out[2:2]));
	soft   sft15a_3
	( 
	.in(wire_sft15a_in[3:3]),
	.out(wire_sft15a_out[3:3]));
	soft   sft15a_4
	( 
	.in(wire_sft15a_in[4:4]),
	.out(wire_sft15a_out[4:4]));
	soft   sft15a_5
	( 
	.in(wire_sft15a_in[5:5]),
	.out(wire_sft15a_out[5:5]));
	soft   sft15a_6
	( 
	.in(wire_sft15a_in[6:6]),
	.out(wire_sft15a_out[6:6]));
	soft   sft15a_7
	( 
	.in(wire_sft15a_in[7:7]),
	.out(wire_sft15a_out[7:7]));
	soft   sft15a_8
	( 
	.in(wire_sft15a_in[8:8]),
	.out(wire_sft15a_out[8:8]));
	soft   sft15a_9
	( 
	.in(wire_sft15a_in[9:9]),
	.out(wire_sft15a_out[9:9]));
	soft   sft15a_10
	( 
	.in(wire_sft15a_in[10:10]),
	.out(wire_sft15a_out[10:10]));
	soft   sft15a_11
	( 
	.in(wire_sft15a_in[11:11]),
	.out(wire_sft15a_out[11:11]));
	soft   sft15a_12
	( 
	.in(wire_sft15a_in[12:12]),
	.out(wire_sft15a_out[12:12]));
	soft   sft15a_13
	( 
	.in(wire_sft15a_in[13:13]),
	.out(wire_sft15a_out[13:13]));
	soft   sft15a_14
	( 
	.in(wire_sft15a_in[14:14]),
	.out(wire_sft15a_out[14:14]));
	soft   sft15a_15
	( 
	.in(wire_sft15a_in[15:15]),
	.out(wire_sft15a_out[15:15]));
	soft   sft15a_16
	( 
	.in(wire_sft15a_in[16:16]),
	.out(wire_sft15a_out[16:16]));
	soft   sft15a_17
	( 
	.in(wire_sft15a_in[17:17]),
	.out(wire_sft15a_out[17:17]));
	soft   sft15a_18
	( 
	.in(wire_sft15a_in[18:18]),
	.out(wire_sft15a_out[18:18]));
	soft   sft15a_19
	( 
	.in(wire_sft15a_in[19:19]),
	.out(wire_sft15a_out[19:19]));
	soft   sft15a_20
	( 
	.in(wire_sft15a_in[20:20]),
	.out(wire_sft15a_out[20:20]));
	soft   sft15a_21
	( 
	.in(wire_sft15a_in[21:21]),
	.out(wire_sft15a_out[21:21]));
	soft   sft15a_22
	( 
	.in(wire_sft15a_in[22:22]),
	.out(wire_sft15a_out[22:22]));
	soft   sft15a_23
	( 
	.in(wire_sft15a_in[23:23]),
	.out(wire_sft15a_out[23:23]));
	soft   sft15a_24
	( 
	.in(wire_sft15a_in[24:24]),
	.out(wire_sft15a_out[24:24]));
	soft   sft15a_25
	( 
	.in(wire_sft15a_in[25:25]),
	.out(wire_sft15a_out[25:25]));
	soft   sft15a_26
	( 
	.in(wire_sft15a_in[26:26]),
	.out(wire_sft15a_out[26:26]));
	soft   sft15a_27
	( 
	.in(wire_sft15a_in[27:27]),
	.out(wire_sft15a_out[27:27]));
	soft   sft15a_28
	( 
	.in(wire_sft15a_in[28:28]),
	.out(wire_sft15a_out[28:28]));
	soft   sft15a_29
	( 
	.in(wire_sft15a_in[29:29]),
	.out(wire_sft15a_out[29:29]));
	soft   sft15a_30
	( 
	.in(wire_sft15a_in[30:30]),
	.out(wire_sft15a_out[30:30]));
	soft   sft15a_31
	( 
	.in(wire_sft15a_in[31:31]),
	.out(wire_sft15a_out[31:31]));
	soft   sft15a_32
	( 
	.in(wire_sft15a_in[32:32]),
	.out(wire_sft15a_out[32:32]));
	soft   sft15a_33
	( 
	.in(wire_sft15a_in[33:33]),
	.out(wire_sft15a_out[33:33]));
	soft   sft15a_34
	( 
	.in(wire_sft15a_in[34:34]),
	.out(wire_sft15a_out[34:34]));
	soft   sft15a_35
	( 
	.in(wire_sft15a_in[35:35]),
	.out(wire_sft15a_out[35:35]));
	soft   sft15a_36
	( 
	.in(wire_sft15a_in[36:36]),
	.out(wire_sft15a_out[36:36]));
	soft   sft15a_37
	( 
	.in(wire_sft15a_in[37:37]),
	.out(wire_sft15a_out[37:37]));
	soft   sft15a_38
	( 
	.in(wire_sft15a_in[38:38]),
	.out(wire_sft15a_out[38:38]));
	soft   sft15a_39
	( 
	.in(wire_sft15a_in[39:39]),
	.out(wire_sft15a_out[39:39]));
	soft   sft15a_40
	( 
	.in(wire_sft15a_in[40:40]),
	.out(wire_sft15a_out[40:40]));
	soft   sft15a_41
	( 
	.in(wire_sft15a_in[41:41]),
	.out(wire_sft15a_out[41:41]));
	soft   sft15a_42
	( 
	.in(wire_sft15a_in[42:42]),
	.out(wire_sft15a_out[42:42]));
	soft   sft15a_43
	( 
	.in(wire_sft15a_in[43:43]),
	.out(wire_sft15a_out[43:43]));
	soft   sft15a_44
	( 
	.in(wire_sft15a_in[44:44]),
	.out(wire_sft15a_out[44:44]));
	soft   sft15a_45
	( 
	.in(wire_sft15a_in[45:45]),
	.out(wire_sft15a_out[45:45]));
	soft   sft15a_46
	( 
	.in(wire_sft15a_in[46:46]),
	.out(wire_sft15a_out[46:46]));
	assign
		wire_sft15a_in = {w255w, {w255w, {w255w, {w255w, {w255w, {w255w, {w255w, {w255w, {w255w, {w255w, {w255w, {w255w, {w255w, {w255w, {wire_sft12a_out[32], {wire_sft12a_out[31], {wire_sft12a_out[30], {wire_sft12a_out[29], {wire_sft12a_out[28], {wire_sft12a_out[27], {wire_sft12a_out[26], {wire_sft12a_out[25], {wire_sft12a_out[24], {wire_sft12a_out[23], {wire_sft12a_out[22], {wire_sft12a_out[21], {wire_sft12a_out[20], {wire_sft12a_out[19], {wire_sft12a_out[18], {wire_sft12a_out[17], {wire_sft12a_out[16], {wire_sft12a_out[15], {wire_sft12a_out[14], {wire_sft12a_out[13], {wire_sft12a_out[12], {wire_sft12a_out[11], {wire_sft12a_out[10], {wire_sft12a_out[9], {wire_sft12a_out[8], {wire_sft12a_out[7], {wire_sft12a_out[6], {wire_sft12a_out[5], {wire_sft12a_out[4], {wire_sft12a_out[3], {wire_sft12a_out[2], {wire_sft12a_out[1], wire_sft12a_out[0]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft16a_0
	( 
	.in(wire_sft16a_in[0:0]),
	.out(wire_sft16a_out[0:0]));
	soft   sft16a_1
	( 
	.in(wire_sft16a_in[1:1]),
	.out(wire_sft16a_out[1:1]));
	soft   sft16a_2
	( 
	.in(wire_sft16a_in[2:2]),
	.out(wire_sft16a_out[2:2]));
	soft   sft16a_3
	( 
	.in(wire_sft16a_in[3:3]),
	.out(wire_sft16a_out[3:3]));
	soft   sft16a_4
	( 
	.in(wire_sft16a_in[4:4]),
	.out(wire_sft16a_out[4:4]));
	soft   sft16a_5
	( 
	.in(wire_sft16a_in[5:5]),
	.out(wire_sft16a_out[5:5]));
	soft   sft16a_6
	( 
	.in(wire_sft16a_in[6:6]),
	.out(wire_sft16a_out[6:6]));
	soft   sft16a_7
	( 
	.in(wire_sft16a_in[7:7]),
	.out(wire_sft16a_out[7:7]));
	soft   sft16a_8
	( 
	.in(wire_sft16a_in[8:8]),
	.out(wire_sft16a_out[8:8]));
	soft   sft16a_9
	( 
	.in(wire_sft16a_in[9:9]),
	.out(wire_sft16a_out[9:9]));
	soft   sft16a_10
	( 
	.in(wire_sft16a_in[10:10]),
	.out(wire_sft16a_out[10:10]));
	soft   sft16a_11
	( 
	.in(wire_sft16a_in[11:11]),
	.out(wire_sft16a_out[11:11]));
	soft   sft16a_12
	( 
	.in(wire_sft16a_in[12:12]),
	.out(wire_sft16a_out[12:12]));
	soft   sft16a_13
	( 
	.in(wire_sft16a_in[13:13]),
	.out(wire_sft16a_out[13:13]));
	soft   sft16a_14
	( 
	.in(wire_sft16a_in[14:14]),
	.out(wire_sft16a_out[14:14]));
	soft   sft16a_15
	( 
	.in(wire_sft16a_in[15:15]),
	.out(wire_sft16a_out[15:15]));
	soft   sft16a_16
	( 
	.in(wire_sft16a_in[16:16]),
	.out(wire_sft16a_out[16:16]));
	soft   sft16a_17
	( 
	.in(wire_sft16a_in[17:17]),
	.out(wire_sft16a_out[17:17]));
	soft   sft16a_18
	( 
	.in(wire_sft16a_in[18:18]),
	.out(wire_sft16a_out[18:18]));
	soft   sft16a_19
	( 
	.in(wire_sft16a_in[19:19]),
	.out(wire_sft16a_out[19:19]));
	soft   sft16a_20
	( 
	.in(wire_sft16a_in[20:20]),
	.out(wire_sft16a_out[20:20]));
	soft   sft16a_21
	( 
	.in(wire_sft16a_in[21:21]),
	.out(wire_sft16a_out[21:21]));
	soft   sft16a_22
	( 
	.in(wire_sft16a_in[22:22]),
	.out(wire_sft16a_out[22:22]));
	soft   sft16a_23
	( 
	.in(wire_sft16a_in[23:23]),
	.out(wire_sft16a_out[23:23]));
	soft   sft16a_24
	( 
	.in(wire_sft16a_in[24:24]),
	.out(wire_sft16a_out[24:24]));
	soft   sft16a_25
	( 
	.in(wire_sft16a_in[25:25]),
	.out(wire_sft16a_out[25:25]));
	soft   sft16a_26
	( 
	.in(wire_sft16a_in[26:26]),
	.out(wire_sft16a_out[26:26]));
	soft   sft16a_27
	( 
	.in(wire_sft16a_in[27:27]),
	.out(wire_sft16a_out[27:27]));
	soft   sft16a_28
	( 
	.in(wire_sft16a_in[28:28]),
	.out(wire_sft16a_out[28:28]));
	soft   sft16a_29
	( 
	.in(wire_sft16a_in[29:29]),
	.out(wire_sft16a_out[29:29]));
	soft   sft16a_30
	( 
	.in(wire_sft16a_in[30:30]),
	.out(wire_sft16a_out[30:30]));
	soft   sft16a_31
	( 
	.in(wire_sft16a_in[31:31]),
	.out(wire_sft16a_out[31:31]));
	soft   sft16a_32
	( 
	.in(wire_sft16a_in[32:32]),
	.out(wire_sft16a_out[32:32]));
	soft   sft16a_33
	( 
	.in(wire_sft16a_in[33:33]),
	.out(wire_sft16a_out[33:33]));
	soft   sft16a_34
	( 
	.in(wire_sft16a_in[34:34]),
	.out(wire_sft16a_out[34:34]));
	soft   sft16a_35
	( 
	.in(wire_sft16a_in[35:35]),
	.out(wire_sft16a_out[35:35]));
	soft   sft16a_36
	( 
	.in(wire_sft16a_in[36:36]),
	.out(wire_sft16a_out[36:36]));
	soft   sft16a_37
	( 
	.in(wire_sft16a_in[37:37]),
	.out(wire_sft16a_out[37:37]));
	soft   sft16a_38
	( 
	.in(wire_sft16a_in[38:38]),
	.out(wire_sft16a_out[38:38]));
	soft   sft16a_39
	( 
	.in(wire_sft16a_in[39:39]),
	.out(wire_sft16a_out[39:39]));
	soft   sft16a_40
	( 
	.in(wire_sft16a_in[40:40]),
	.out(wire_sft16a_out[40:40]));
	soft   sft16a_41
	( 
	.in(wire_sft16a_in[41:41]),
	.out(wire_sft16a_out[41:41]));
	soft   sft16a_42
	( 
	.in(wire_sft16a_in[42:42]),
	.out(wire_sft16a_out[42:42]));
	soft   sft16a_43
	( 
	.in(wire_sft16a_in[43:43]),
	.out(wire_sft16a_out[43:43]));
	soft   sft16a_44
	( 
	.in(wire_sft16a_in[44:44]),
	.out(wire_sft16a_out[44:44]));
	soft   sft16a_45
	( 
	.in(wire_sft16a_in[45:45]),
	.out(wire_sft16a_out[45:45]));
	soft   sft16a_46
	( 
	.in(wire_sft16a_in[46:46]),
	.out(wire_sft16a_out[46:46]));
	assign
		wire_sft16a_in = wire_add13_result;
	assign
		result = w513w[63:0],
		w255w = 1'b0,
		w513w = {wire_sft16a_out[46:45], wire_sft16a_out[44:43], wire_sft16a_out[42:41], wire_sft16a_out[40:39], wire_sft16a_out[38:37], wire_sft16a_out[36:35], wire_sft16a_out[34:33], wire_sft16a_out[32:31], wire_sft16a_out[30:29], wire_sft16a_out[28:27], wire_sft16a_out[26:25], wire_sft16a_out[24:23], wire_sft16a_out[22:21], wire_sft16a_out[20:19], wire_sft16a_out[18:17], wire_sft16a_out[16:15], wire_sft16a_out[14:13], wire_sft16a_out[12:11], wire_sft16a_out[10:9], wire_sft16a_out[8:7], wire_sft16a_out[6:5], wire_sft16a_out[4:3], wire_sft16a_out[2:1], wire_sft16a_out[0], wire_mac_out2_dataout[17], wire_mac_out2_dataout[16], wire_mac_out2_dataout[15], wire_mac_out2_dataout[14], wire_mac_out2_dataout[13], wire_mac_out2_dataout[12], wire_mac_out2_dataout[11], wire_mac_out2_dataout[10], wire_mac_out2_dataout[9], wire_mac_out2_dataout[8], wire_mac_out2_dataout[7], wire_mac_out2_dataout[6], wire_mac_out2_dataout[5], wire_mac_out2_dataout[4], wire_mac_out2_dataout[3], wire_mac_out2_dataout[2], wire_mac_out2_dataout[1], wire_mac_out2_dataout[0]};
endmodule //LPM_MULT32_mult
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module LPM_MULT32 (
	dataa,
	datab,
	result)/* synthesis synthesis_clearbox = 1 */;

	input	[31:0]  dataa;
	input	[31:0]  datab;
	output	[63:0]  result;

	wire [63:0] sub_wire0;
	wire [63:0] result = sub_wire0[63:0];

	LPM_MULT32_mult	LPM_MULT32_mult_component (
				.dataa (dataa),
				.datab (datab),
				.result (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: AutoSizeResult NUMERIC "1"
// Retrieval info: PRIVATE: B_isConstant NUMERIC "0"
// Retrieval info: PRIVATE: ConstantB NUMERIC "0"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone III"
// Retrieval info: PRIVATE: LPM_PIPELINE NUMERIC "0"
// Retrieval info: PRIVATE: Latency NUMERIC "0"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: SignedMult NUMERIC "0"
// Retrieval info: PRIVATE: USE_MULT NUMERIC "1"
// Retrieval info: PRIVATE: ValidConstant NUMERIC "0"
// Retrieval info: PRIVATE: WidthA NUMERIC "32"
// Retrieval info: PRIVATE: WidthB NUMERIC "32"
// Retrieval info: PRIVATE: WidthP NUMERIC "64"
// Retrieval info: PRIVATE: aclr NUMERIC "0"
// Retrieval info: PRIVATE: clken NUMERIC "0"
// Retrieval info: PRIVATE: new_diagram STRING "1"
// Retrieval info: PRIVATE: optimize NUMERIC "1"
// Retrieval info: LIBRARY: lpm lpm.lpm_components.all
// Retrieval info: CONSTANT: LPM_HINT STRING "DEDICATED_MULTIPLIER_CIRCUITRY=YES,MAXIMIZE_SPEED=9"
// Retrieval info: CONSTANT: LPM_REPRESENTATION STRING "UNSIGNED"
// Retrieval info: CONSTANT: LPM_TYPE STRING "LPM_MULT"
// Retrieval info: CONSTANT: LPM_WIDTHA NUMERIC "32"
// Retrieval info: CONSTANT: LPM_WIDTHB NUMERIC "32"
// Retrieval info: CONSTANT: LPM_WIDTHP NUMERIC "64"
// Retrieval info: USED_PORT: dataa 0 0 32 0 INPUT NODEFVAL "dataa[31..0]"
// Retrieval info: USED_PORT: datab 0 0 32 0 INPUT NODEFVAL "datab[31..0]"
// Retrieval info: USED_PORT: result 0 0 64 0 OUTPUT NODEFVAL "result[63..0]"
// Retrieval info: CONNECT: @dataa 0 0 32 0 dataa 0 0 32 0
// Retrieval info: CONNECT: @datab 0 0 32 0 datab 0 0 32 0
// Retrieval info: CONNECT: result 0 0 64 0 @result 0 0 64 0
// Retrieval info: GEN_FILE: TYPE_NORMAL LPM_MULT32.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL LPM_MULT32.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL LPM_MULT32.cmp FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL LPM_MULT32.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL LPM_MULT32_inst.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL LPM_MULT32_bb.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL LPM_MULT32_syn.v TRUE
// Retrieval info: LIB_FILE: lpm
