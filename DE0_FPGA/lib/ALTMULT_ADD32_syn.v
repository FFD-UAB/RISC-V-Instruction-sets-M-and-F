// megafunction wizard: %ALTMULT_ADD%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: ALTMULT_ADD 

// ============================================================
// File Name: ALTMULT_ADD32.v
// Megafunction Name(s):
// 			ALTMULT_ADD
//
// Simulation Library Files(s):
// 			altera_mf
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 13.1.0 Build 162 10/23/2013 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2013 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//altmult_add ADDNSUB_MULTIPLIER_PIPELINE_REGISTER1="UNREGISTERED" ADDNSUB_MULTIPLIER_REGISTER1="UNREGISTERED" DEDICATED_MULTIPLIER_CIRCUITRY="YES" DEVICE_FAMILY="Cyclone III" INPUT_REGISTER_A0="UNREGISTERED" INPUT_REGISTER_B0="UNREGISTERED" INPUT_SOURCE_A0="DATAA" INPUT_SOURCE_B0="DATAB" MULTIPLIER1_DIRECTION="ADD" MULTIPLIER_REGISTER0="UNREGISTERED" NUMBER_OF_MULTIPLIERS=1 OUTPUT_REGISTER="UNREGISTERED" port_addnsub1="PORT_UNUSED" port_signa="PORT_USED" port_signb="PORT_USED" SIGNED_PIPELINE_REGISTER_A="UNREGISTERED" SIGNED_PIPELINE_REGISTER_B="UNREGISTERED" SIGNED_REGISTER_A="UNREGISTERED" SIGNED_REGISTER_B="UNREGISTERED" WIDTH_A=32 WIDTH_B=32 WIDTH_RESULT=64 clock0 dataa datab result signa signb
//VERSION_BEGIN 13.1 cbx_alt_ded_mult_y 2013:10:23:18:05:48:SJ cbx_altera_mult_add 2013:10:23:18:05:48:SJ cbx_altera_mult_add_rtl 2013:10:23:18:05:48:SJ cbx_altmult_add 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_mult 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_parallel_add 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//alt_ded_mult_y dedicated_multiplier_circuitry="YES" device_family="Cyclone III" extra_latency=0 input_reg_a="UNREGISTERED" input_reg_b="UNREGISTERED" output_reg="UNREGISTERED" pipeline_reg="UNREGISTERED" representation_a="UNSIGNED" representation_b="UNSIGNED" sign_reg_a="UNREGISTERED" sign_reg_b="UNREGISTERED" sub_dedicated_multiplier_circuitry="YES" width_a=32 width_b=32 dataa datab result signa signb
//VERSION_BEGIN 13.1 cbx_alt_ded_mult_y 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_parallel_add 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END


//alt_ded_mult_y dedicated_multiplier_circuitry="YES" device_family="Cyclone III" external_stage_counter=5 input_aclr_a="ACLR0" input_aclr_b="ACLR0" input_reg_a="UNREGISTERED" input_reg_b="UNREGISTERED" level=1 output_reg="UNREGISTERED" pipeline=0 pipeline_clear="ACLR0" pipeline_reg="UNREGISTERED" representation_a="UNSIGNED" representation_b="UNSIGNED" sign_aclr_a="ACLR0" sign_aclr_b="ACLR0" sign_reg_a="UNREGISTERED" sign_reg_b="UNREGISTERED" sub_dedicated_multiplier_circuitry="YES" width_a=14 width_b=32 dataa datab result signa signb signb_out
//VERSION_BEGIN 13.1 cbx_alt_ded_mult_y 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_parallel_add 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END


//alt_ded_mult_y dedicated_multiplier_circuitry="YES" device_family="Cyclone III" external_stage_counter=5 input_aclr_a="ACLR0" input_aclr_b="ACLR0" input_reg_a="UNREGISTERED" input_reg_b="UNREGISTERED" level=2 output_reg="UNREGISTERED" pipeline=0 pipeline_clear="ACLR0" pipeline_reg="UNREGISTERED" representation_a="UNSIGNED" representation_b="UNSIGNED" sign_aclr_a="ACLR0" sign_aclr_b="ACLR0" sign_reg_a="UNREGISTERED" sign_reg_b="UNREGISTERED" sub_dedicated_multiplier_circuitry="YES" width_a=14 width_b=14 dataa datab result signa signa_out signb signb_out
//VERSION_BEGIN 13.1 cbx_alt_ded_mult_y 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_parallel_add 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END


//dffpipe DELAY=0 WIDTH=28 d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 13.1 cbx_mgl 2013:10:23:18:06:54:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  ALTMULT_ADD32_dffpipe
	( 
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   [27:0]  d;
	output   [27:0]  q;


	assign
		q = d;
endmodule //ALTMULT_ADD32_dffpipe


//dffpipe DELAY=0 WIDTH=1 d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 13.1 cbx_mgl 2013:10:23:18:06:54:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  ALTMULT_ADD32_dffpipe1
	( 
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   [0:0]  d;
	output   [0:0]  q;


	assign
		q = d;
endmodule //ALTMULT_ADD32_dffpipe1

//synthesis_resources = dsp_9bit 2 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ALTMULT_ADD32_ded_mult12
	( 
	dataa,
	datab,
	result,
	signa,
	signa_out,
	signb,
	signb_out) /* synthesis synthesis_clearbox=1 */;
	input   [13:0]  dataa;
	input   [13:0]  datab;
	output   [27:0]  result;
	input   signa;
	output   signa_out;
	input   signb;
	output   signb_out;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   signa;
	tri0   signb;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [27:0]   wire_mac_mult2_dataout;
	wire  [27:0]   wire_mac_out3_dataout;
	wire  [27:0]   wire_pre_result_q;
	wire  [0:0]   wire_pre_signa_out_q;
	wire  [0:0]   wire_pre_signb_out_q;
	wire  [13:0]  x_dataa;
	wire  [13:0]  x_datab;
	wire  [0:0]  x_signa;
	wire  [0:0]  x_signb;

	cycloneiii_mac_mult   mac_mult2
	( 
	.dataa({x_dataa}),
	.datab({x_datab}),
	.dataout(wire_mac_mult2_dataout),
	.signa(x_signa),
	.signb(x_signb)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult2.dataa_width = 14,
		mac_mult2.datab_width = 14,
		mac_mult2.lpm_type = "cycloneiii_mac_mult";
	cycloneiii_mac_out   mac_out3
	( 
	.dataa({wire_mac_mult2_dataout[27:0]}),
	.dataout(wire_mac_out3_dataout)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out3.dataa_width = 28,
		mac_out3.lpm_type = "cycloneiii_mac_out";
	ALTMULT_ADD32_dffpipe   pre_result
	( 
	.d(wire_mac_out3_dataout[27:0]),
	.q(wire_pre_result_q));
	ALTMULT_ADD32_dffpipe1   pre_signa_out
	( 
	.d(x_signa),
	.q(wire_pre_signa_out_q));
	ALTMULT_ADD32_dffpipe1   pre_signb_out
	( 
	.d(x_signb),
	.q(wire_pre_signb_out_q));
	assign
		result = wire_pre_result_q,
		signa_out = wire_pre_signa_out_q,
		signb_out = wire_pre_signb_out_q,
		x_dataa = dataa,
		x_datab = datab,
		x_signa = signa,
		x_signb = signb;
endmodule //ALTMULT_ADD32_ded_mult12


//alt_ded_mult_y dedicated_multiplier_circuitry="YES" device_family="Cyclone III" external_stage_counter=5 input_aclr_a="ACLR0" input_aclr_b="ACLR0" input_reg_a="UNREGISTERED" input_reg_b="UNREGISTERED" level=2 output_reg="UNREGISTERED" pipeline=0 pipeline_clear="ACLR0" pipeline_reg="UNREGISTERED" representation_a="UNSIGNED" representation_b="UNSIGNED" sign_aclr_a="ACLR0" sign_aclr_b="ACLR0" sign_reg_a="UNREGISTERED" sign_reg_b="UNREGISTERED" sub_dedicated_multiplier_circuitry="YES" width_a=14 width_b=18 dataa datab result signa
//VERSION_BEGIN 13.1 cbx_alt_ded_mult_y 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_parallel_add 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END


//dffpipe DELAY=0 WIDTH=32 d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 13.1 cbx_mgl 2013:10:23:18:06:54:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  ALTMULT_ADD32_dffpipe12
	( 
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   [31:0]  d;
	output   [31:0]  q;


	assign
		q = d;
endmodule //ALTMULT_ADD32_dffpipe12

//synthesis_resources = dsp_9bit 2 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ALTMULT_ADD32_ded_mult123
	( 
	dataa,
	datab,
	result,
	signa) /* synthesis synthesis_clearbox=1 */;
	input   [13:0]  dataa;
	input   [17:0]  datab;
	output   [31:0]  result;
	input   signa;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   signa;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [31:0]   wire_mac_mult4_dataout;
	wire  [31:0]   wire_mac_out5_dataout;
	wire  [31:0]   wire_pre_result_q;
	wire  [13:0]  x_dataa;
	wire  [17:0]  x_datab;
	wire  [0:0]  x_signa;
	wire  [0:0]  x_signb;

	cycloneiii_mac_mult   mac_mult4
	( 
	.dataa({x_dataa}),
	.datab({x_datab}),
	.dataout(wire_mac_mult4_dataout),
	.signa(x_signa),
	.signb(x_signb)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult4.dataa_width = 14,
		mac_mult4.datab_width = 18,
		mac_mult4.lpm_type = "cycloneiii_mac_mult";
	cycloneiii_mac_out   mac_out5
	( 
	.dataa({wire_mac_mult4_dataout[31:0]}),
	.dataout(wire_mac_out5_dataout)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out5.dataa_width = 32,
		mac_out5.lpm_type = "cycloneiii_mac_out";
	ALTMULT_ADD32_dffpipe12   pre_result
	( 
	.d(wire_mac_out5_dataout[31:0]),
	.q(wire_pre_result_q));
	assign
		result = wire_pre_result_q,
		x_dataa = dataa,
		x_datab = datab,
		x_signa = signa,
		x_signb = 1'b0;
endmodule //ALTMULT_ADD32_ded_mult123


//lpm_add_sub DEVICE_FAMILY="Cyclone III" LPM_DIRECTION="ADD" LPM_WIDTH=28 dataa datab result
//VERSION_BEGIN 13.1 cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = dsp_9bit 4 lut 28 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ALTMULT_ADD32_ded_mult1
	( 
	dataa,
	datab,
	result,
	signa,
	signb,
	signb_out) /* synthesis synthesis_clearbox=1 */;
	input   [13:0]  dataa;
	input   [31:0]  datab;
	output   [45:0]  result;
	input   signa;
	input   signb;
	output   signb_out;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   signa;
	tri0   signb;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [27:0]   wire_left_mult_result;
	wire  wire_left_mult_signa_out;
	wire  wire_left_mult_signb_out;
	wire  [31:0]   wire_right_mult_result;
	wire	[27:0]	wire_substage_adder_dataa;
	wire	[27:0]	wire_substage_adder_datab;
	wire	[27:0]	wire_substage_adder_result;
	wire  [13:0]  extension_bits;

	ALTMULT_ADD32_ded_mult12   left_mult
	( 
	.dataa(dataa),
	.datab(datab[31:18]),
	.result(wire_left_mult_result),
	.signa(signa),
	.signa_out(wire_left_mult_signa_out),
	.signb(signb),
	.signb_out(wire_left_mult_signb_out));
	ALTMULT_ADD32_ded_mult123   right_mult
	( 
	.dataa(dataa),
	.datab(datab[17:0]),
	.result(wire_right_mult_result),
	.signa(signa));
	assign
		wire_substage_adder_result = wire_substage_adder_dataa + wire_substage_adder_datab;
	assign
		wire_substage_adder_dataa = wire_left_mult_result,
		wire_substage_adder_datab = {{extension_bits, wire_right_mult_result[31:18]}};
	assign
		extension_bits = {14{(wire_right_mult_result[31] & wire_left_mult_signa_out)}},
		result = {wire_substage_adder_result, wire_right_mult_result[17:0]},
		signb_out = wire_left_mult_signb_out;
endmodule //ALTMULT_ADD32_ded_mult1


//alt_ded_mult_y dedicated_multiplier_circuitry="YES" device_family="Cyclone III" external_stage_counter=5 input_aclr_a="ACLR0" input_aclr_b="ACLR0" input_reg_a="UNREGISTERED" input_reg_b="UNREGISTERED" level=1 output_reg="UNREGISTERED" pipeline=0 pipeline_clear="ACLR0" pipeline_reg="UNREGISTERED" representation_a="UNSIGNED" representation_b="UNSIGNED" sign_aclr_a="ACLR0" sign_aclr_b="ACLR0" sign_reg_a="UNREGISTERED" sign_reg_b="UNREGISTERED" sub_dedicated_multiplier_circuitry="YES" width_a=18 width_b=32 dataa datab result signb
//VERSION_BEGIN 13.1 cbx_alt_ded_mult_y 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_parallel_add 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END


//alt_ded_mult_y dedicated_multiplier_circuitry="YES" device_family="Cyclone III" external_stage_counter=5 input_aclr_a="ACLR0" input_aclr_b="ACLR0" input_reg_a="UNREGISTERED" input_reg_b="UNREGISTERED" level=2 output_reg="UNREGISTERED" pipeline=0 pipeline_clear="ACLR0" pipeline_reg="UNREGISTERED" representation_a="UNSIGNED" representation_b="UNSIGNED" sign_aclr_b="ACLR0" sign_reg_b="UNREGISTERED" sub_dedicated_multiplier_circuitry="YES" width_a=18 width_b=14 dataa datab result signb
//VERSION_BEGIN 13.1 cbx_alt_ded_mult_y 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_parallel_add 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = dsp_9bit 2 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ALTMULT_ADD32_ded_mult12345
	( 
	dataa,
	datab,
	result,
	signb) /* synthesis synthesis_clearbox=1 */;
	input   [17:0]  dataa;
	input   [13:0]  datab;
	output   [31:0]  result;
	input   signb;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   signb;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [31:0]   wire_mac_mult6_dataout;
	wire  [31:0]   wire_mac_out7_dataout;
	wire  [31:0]   wire_pre_result_q;
	wire  [17:0]  x_dataa;
	wire  [13:0]  x_datab;
	wire  [0:0]  x_signa;
	wire  [0:0]  x_signb;

	cycloneiii_mac_mult   mac_mult6
	( 
	.dataa({x_dataa}),
	.datab({x_datab}),
	.dataout(wire_mac_mult6_dataout),
	.signa(x_signa),
	.signb(x_signb)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult6.dataa_width = 18,
		mac_mult6.datab_width = 14,
		mac_mult6.lpm_type = "cycloneiii_mac_mult";
	cycloneiii_mac_out   mac_out7
	( 
	.dataa({wire_mac_mult6_dataout[31:0]}),
	.dataout(wire_mac_out7_dataout)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out7.dataa_width = 32,
		mac_out7.lpm_type = "cycloneiii_mac_out";
	ALTMULT_ADD32_dffpipe12   pre_result
	( 
	.d(wire_mac_out7_dataout[31:0]),
	.q(wire_pre_result_q));
	assign
		result = wire_pre_result_q,
		x_dataa = dataa,
		x_datab = datab,
		x_signa = 1'b0,
		x_signb = signb;
endmodule //ALTMULT_ADD32_ded_mult12345


//alt_ded_mult_y dedicated_multiplier_circuitry="YES" device_family="Cyclone III" external_stage_counter=5 input_aclr_a="ACLR0" input_aclr_b="ACLR0" input_reg_a="UNREGISTERED" input_reg_b="UNREGISTERED" level=2 output_reg="UNREGISTERED" pipeline=0 pipeline_clear="ACLR0" pipeline_reg="UNREGISTERED" representation_a="UNSIGNED" representation_b="UNSIGNED" sign_aclr_b="ACLR0" sign_reg_b="UNREGISTERED" sub_dedicated_multiplier_circuitry="YES" width_a=18 width_b=18 dataa datab result
//VERSION_BEGIN 13.1 cbx_alt_ded_mult_y 2013:10:23:18:05:48:SJ cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_padd 2013:10:23:18:05:48:SJ cbx_parallel_add 2013:10:23:18:05:48:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END


//dffpipe DELAY=0 WIDTH=36 d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 13.1 cbx_mgl 2013:10:23:18:06:54:SJ cbx_stratixii 2013:10:23:18:05:48:SJ cbx_util_mgl 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  ALTMULT_ADD32_dffpipe123
	( 
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   [35:0]  d;
	output   [35:0]  q;


	assign
		q = d;
endmodule //ALTMULT_ADD32_dffpipe123

//synthesis_resources = dsp_9bit 2 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ALTMULT_ADD32_ded_mult123456
	( 
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   [17:0]  dataa;
	input   [17:0]  datab;
	output   [35:0]  result;

	wire  [35:0]   wire_mac_mult8_dataout;
	wire  [35:0]   wire_mac_out9_dataout;
	wire  [35:0]   wire_pre_result_q;
	wire  [17:0]  x_dataa;
	wire  [17:0]  x_datab;
	wire  [0:0]  x_signa;
	wire  [0:0]  x_signb;

	cycloneiii_mac_mult   mac_mult8
	( 
	.dataa({x_dataa}),
	.datab({x_datab}),
	.dataout(wire_mac_mult8_dataout),
	.signa(x_signa),
	.signb(x_signb)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult8.dataa_width = 18,
		mac_mult8.datab_width = 18,
		mac_mult8.lpm_type = "cycloneiii_mac_mult";
	cycloneiii_mac_out   mac_out9
	( 
	.dataa({wire_mac_mult8_dataout[35:0]}),
	.dataout(wire_mac_out9_dataout)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out9.dataa_width = 36,
		mac_out9.lpm_type = "cycloneiii_mac_out";
	ALTMULT_ADD32_dffpipe123   pre_result
	( 
	.d(wire_mac_out9_dataout[35:0]),
	.q(wire_pre_result_q));
	assign
		result = wire_pre_result_q,
		x_dataa = dataa,
		x_datab = datab,
		x_signa = 1'b0,
		x_signb = 1'b0;
endmodule //ALTMULT_ADD32_ded_mult123456


//lpm_add_sub DEVICE_FAMILY="Cyclone III" LPM_DIRECTION="ADD" LPM_WIDTH=32 dataa datab result
//VERSION_BEGIN 13.1 cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = dsp_9bit 4 lut 32 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ALTMULT_ADD32_ded_mult1234
	( 
	dataa,
	datab,
	result,
	signb) /* synthesis synthesis_clearbox=1 */;
	input   [17:0]  dataa;
	input   [31:0]  datab;
	output   [49:0]  result;
	input   signb;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   signb;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [31:0]   wire_left_mult_result;
	wire  [35:0]   wire_right_mult_result;
	wire	[31:0]	wire_substage_adder_dataa;
	wire	[31:0]	wire_substage_adder_datab;
	wire	[31:0]	wire_substage_adder_result;
	wire  [13:0]  extension_bits;

	ALTMULT_ADD32_ded_mult12345   left_mult
	( 
	.dataa(dataa),
	.datab(datab[31:18]),
	.result(wire_left_mult_result),
	.signb(signb));
	ALTMULT_ADD32_ded_mult123456   right_mult
	( 
	.dataa(dataa),
	.datab(datab[17:0]),
	.result(wire_right_mult_result));
	assign
		wire_substage_adder_result = wire_substage_adder_dataa + wire_substage_adder_datab;
	assign
		wire_substage_adder_dataa = wire_left_mult_result,
		wire_substage_adder_datab = {{extension_bits, wire_right_mult_result[35:18]}};
	assign
		extension_bits = {14{1'b0}},
		result = {wire_substage_adder_result, wire_right_mult_result[17:0]};
endmodule //ALTMULT_ADD32_ded_mult1234


//lpm_add_sub DEVICE_FAMILY="Cyclone III" LPM_DIRECTION="ADD" LPM_WIDTH=46 dataa datab result
//VERSION_BEGIN 13.1 cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ  VERSION_END

//synthesis_resources = dsp_9bit 8 lut 106 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ALTMULT_ADD32_ded_mult
	( 
	dataa,
	datab,
	result,
	signa,
	signb) /* synthesis synthesis_clearbox=1 */;
	input   [31:0]  dataa;
	input   [31:0]  datab;
	output   [63:0]  result;
	input   signa;
	input   signb;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   signa;
	tri0   signb;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [45:0]   wire_left_mult_result;
	wire  wire_left_mult_signb_out;
	wire  [49:0]   wire_right_mult_result;
	wire	[45:0]	wire_substage_adder_dataa;
	wire	[45:0]	wire_substage_adder_datab;
	wire	[45:0]	wire_substage_adder_result;
	wire  [13:0]  extension_bits;

	ALTMULT_ADD32_ded_mult1   left_mult
	( 
	.dataa(dataa[31:18]),
	.datab(datab),
	.result(wire_left_mult_result),
	.signa(signa),
	.signb(signb),
	.signb_out(wire_left_mult_signb_out));
	ALTMULT_ADD32_ded_mult1234   right_mult
	( 
	.dataa(dataa[17:0]),
	.datab(datab),
	.result(wire_right_mult_result),
	.signb(signb));
	assign
		wire_substage_adder_result = wire_substage_adder_dataa + wire_substage_adder_datab;
	assign
		wire_substage_adder_dataa = wire_left_mult_result,
		wire_substage_adder_datab = {{extension_bits, wire_right_mult_result[49:18]}};
	assign
		extension_bits = {14{(wire_right_mult_result[49] & wire_left_mult_signb_out)}},
		result = {wire_substage_adder_result, wire_right_mult_result[17:0]};
endmodule //ALTMULT_ADD32_ded_mult

//synthesis_resources = dsp_9bit 8 lut 106 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  ALTMULT_ADD32_mult_add
	( 
	clock0,
	dataa,
	datab,
	result,
	signa,
	signb) /* synthesis synthesis_clearbox=1 */;
	input   clock0;
	input   [31:0]  dataa;
	input   [31:0]  datab;
	output   [63:0]  result;
	input   signa;
	input   signb;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   clock0;
	tri0   [31:0]  dataa;
	tri0   [31:0]  datab;
	tri0   signa;
	tri0   signb;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [63:0]   wire_ded_mult1_result;
	wire  [31:0]  dataa_bus;
	wire  [31:0]  datab_bus;
	wire  [63:0]  pre_result;

	ALTMULT_ADD32_ded_mult   ded_mult1
	( 
	.dataa({dataa_bus[31:0]}),
	.datab({datab_bus[31:0]}),
	.result(wire_ded_mult1_result),
	.signa(signa),
	.signb(signb));
	assign
		dataa_bus = {dataa[31:0]},
		datab_bus = {datab[31:0]},
		pre_result = wire_ded_mult1_result[63:0],
		result = pre_result[63:0];
endmodule //ALTMULT_ADD32_mult_add
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module ALTMULT_ADD32 (
	clock0,
	dataa_0,
	datab_0,
	signa,
	signb,
	result)/* synthesis synthesis_clearbox = 1 */;

	input	  clock0;
	input	[31:0]  dataa_0;
	input	[31:0]  datab_0;
	input	  signa;
	input	  signb;
	output	[63:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1	  clock0;
	tri0	[31:0]  dataa_0;
	tri0	[31:0]  datab_0;
	tri0	  signa;
	tri0	  signb;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire [63:0] sub_wire0;
	wire [63:0] result = sub_wire0[63:0];

	ALTMULT_ADD32_mult_add	ALTMULT_ADD32_mult_add_component (
				.clock0 (clock0),
				.datab (datab_0),
				.signa (signa),
				.dataa (dataa_0),
				.signb (signb),
				.result (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: ADDER1_ROUND_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: ADDER1_ROUND_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: ADDER1_ROUND_OP STRING "Enabled"
// Retrieval info: PRIVATE: ADDER1_ROUND_PIPE_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: ADDER1_ROUND_PIPE_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: ADDER1_ROUND_PIPE_REG STRING "0"
// Retrieval info: PRIVATE: ADDER1_ROUND_REG STRING "0"
// Retrieval info: PRIVATE: ADDER1_SAT_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: ADDER1_SAT_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: ADDER1_SAT_OP STRING "Enabled"
// Retrieval info: PRIVATE: ADDER1_SAT_OVERFLOW_OUT NUMERIC "0"
// Retrieval info: PRIVATE: ADDER1_SAT_PIPE_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: ADDER1_SAT_PIPE_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: ADDER1_SAT_PIPE_REG STRING "0"
// Retrieval info: PRIVATE: ADDER1_SAT_REG STRING "0"
// Retrieval info: PRIVATE: ADDER3_ROUND_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: ADDER3_ROUND_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: ADDER3_ROUND_OP STRING "Enabled"
// Retrieval info: PRIVATE: ADDER3_ROUND_PIPE_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: ADDER3_ROUND_PIPE_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: ADDER3_ROUND_PIPE_REG STRING "0"
// Retrieval info: PRIVATE: ADDER3_ROUND_REG STRING "0"
// Retrieval info: PRIVATE: ADDNSUB1_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: ADDNSUB1_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: ADDNSUB1_PIPE_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: ADDNSUB1_PIPE_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: ADDNSUB1_PIPE_REG STRING "0"
// Retrieval info: PRIVATE: ADDNSUB1_REG STRING "0"
// Retrieval info: PRIVATE: ADDNSUB3_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: ADDNSUB3_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: ADDNSUB3_PIPE_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: ADDNSUB3_PIPE_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: ADDNSUB3_PIPE_REG STRING "0"
// Retrieval info: PRIVATE: ADDNSUB3_REG STRING "0"
// Retrieval info: PRIVATE: ADD_ENABLE NUMERIC "0"
// Retrieval info: PRIVATE: ALL_REG_ACLR NUMERIC "0"
// Retrieval info: PRIVATE: A_ACLR_SRC_MULT0 NUMERIC "3"
// Retrieval info: PRIVATE: A_CLK_SRC_MULT0 NUMERIC "0"
// Retrieval info: PRIVATE: B_ACLR_SRC_MULT0 NUMERIC "3"
// Retrieval info: PRIVATE: B_CLK_SRC_MULT0 NUMERIC "0"
// Retrieval info: PRIVATE: HAS_MAC STRING "0"
// Retrieval info: PRIVATE: HAS_SAT_ROUND STRING "0"
// Retrieval info: PRIVATE: IMPL_STYLE_DEDICATED NUMERIC "1"
// Retrieval info: PRIVATE: IMPL_STYLE_DEFAULT NUMERIC "0"
// Retrieval info: PRIVATE: IMPL_STYLE_LCELL NUMERIC "0"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone III"
// Retrieval info: PRIVATE: MULT01_ROUND_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: MULT01_ROUND_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: MULT01_ROUND_OP STRING "Enabled"
// Retrieval info: PRIVATE: MULT01_ROUND_PIPE_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: MULT01_ROUND_PIPE_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: MULT01_ROUND_PIPE_REG STRING "0"
// Retrieval info: PRIVATE: MULT01_ROUND_REG STRING "0"
// Retrieval info: PRIVATE: MULT01_SAT_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: MULT01_SAT_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: MULT01_SAT_OP STRING "Enabled"
// Retrieval info: PRIVATE: MULT01_SAT_PIPE_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: MULT01_SAT_PIPE_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: MULT01_SAT_PIPE_REG STRING "0"
// Retrieval info: PRIVATE: MULT01_SAT_REG STRING "0"
// Retrieval info: PRIVATE: MULT0_SAT_OVERFLOW_OUT NUMERIC "0"
// Retrieval info: PRIVATE: MULT1_SAT_OVERFLOW_OUT NUMERIC "0"
// Retrieval info: PRIVATE: MULT23_ROUND_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: MULT23_ROUND_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: MULT23_ROUND_OP STRING "Enabled"
// Retrieval info: PRIVATE: MULT23_ROUND_PIPE_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: MULT23_ROUND_PIPE_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: MULT23_ROUND_PIPE_REG STRING "0"
// Retrieval info: PRIVATE: MULT23_ROUND_REG STRING "0"
// Retrieval info: PRIVATE: MULT23_SAT_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: MULT23_SAT_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: MULT23_SAT_OP STRING "Enabled"
// Retrieval info: PRIVATE: MULT23_SAT_PIPE_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: MULT23_SAT_PIPE_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: MULT23_SAT_PIPE_REG STRING "0"
// Retrieval info: PRIVATE: MULT23_SAT_REG STRING "0"
// Retrieval info: PRIVATE: MULT2_SAT_OVERFLOW_OUT NUMERIC "0"
// Retrieval info: PRIVATE: MULT3_SAT_OVERFLOW_OUT NUMERIC "0"
// Retrieval info: PRIVATE: MULT_REGA0 NUMERIC "0"
// Retrieval info: PRIVATE: MULT_REGB0 NUMERIC "0"
// Retrieval info: PRIVATE: MULT_REGOUT0 NUMERIC "0"
// Retrieval info: PRIVATE: NUM_MULT STRING "1"
// Retrieval info: PRIVATE: OP1 STRING "Add"
// Retrieval info: PRIVATE: OP3 STRING "Add"
// Retrieval info: PRIVATE: OUTPUT_EXTRA_LAT NUMERIC "0"
// Retrieval info: PRIVATE: OUTPUT_REG_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: OUTPUT_REG_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: Q_ACLR_SRC_MULT0 NUMERIC "3"
// Retrieval info: PRIVATE: Q_CLK_SRC_MULT0 NUMERIC "0"
// Retrieval info: PRIVATE: REG_OUT NUMERIC "0"
// Retrieval info: PRIVATE: RNFORMAT STRING "64"
// Retrieval info: PRIVATE: RQFORMAT STRING "Q1.15"
// Retrieval info: PRIVATE: RTS_WIDTH STRING "64"
// Retrieval info: PRIVATE: SAME_CONFIG NUMERIC "1"
// Retrieval info: PRIVATE: SAME_CONTROL_SRC_A0 NUMERIC "1"
// Retrieval info: PRIVATE: SAME_CONTROL_SRC_B0 NUMERIC "1"
// Retrieval info: PRIVATE: SCANOUTA NUMERIC "0"
// Retrieval info: PRIVATE: SCANOUTB NUMERIC "0"
// Retrieval info: PRIVATE: SHIFTOUTA_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: SHIFTOUTA_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: SHIFTOUTA_REG STRING "0"
// Retrieval info: PRIVATE: SIGNA STRING "VARIABLE"
// Retrieval info: PRIVATE: SIGNA_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: SIGNA_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: SIGNA_PIPE_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: SIGNA_PIPE_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: SIGNA_PIPE_REG STRING "0"
// Retrieval info: PRIVATE: SIGNA_REG STRING "0"
// Retrieval info: PRIVATE: SIGNB STRING "VARIABLE"
// Retrieval info: PRIVATE: SIGNB_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: SIGNB_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: SIGNB_PIPE_ACLR_SRC NUMERIC "3"
// Retrieval info: PRIVATE: SIGNB_PIPE_CLK_SRC NUMERIC "0"
// Retrieval info: PRIVATE: SIGNB_PIPE_REG STRING "0"
// Retrieval info: PRIVATE: SIGNB_REG STRING "0"
// Retrieval info: PRIVATE: SRCA0 STRING "Multiplier input"
// Retrieval info: PRIVATE: SRCB0 STRING "Multiplier input"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: WIDTHA STRING "32"
// Retrieval info: PRIVATE: WIDTHB STRING "32"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: ADDNSUB_MULTIPLIER_PIPELINE_REGISTER1 STRING "UNREGISTERED"
// Retrieval info: CONSTANT: ADDNSUB_MULTIPLIER_REGISTER1 STRING "UNREGISTERED"
// Retrieval info: CONSTANT: DEDICATED_MULTIPLIER_CIRCUITRY STRING "YES"
// Retrieval info: CONSTANT: INPUT_REGISTER_A0 STRING "UNREGISTERED"
// Retrieval info: CONSTANT: INPUT_REGISTER_B0 STRING "UNREGISTERED"
// Retrieval info: CONSTANT: INPUT_SOURCE_A0 STRING "DATAA"
// Retrieval info: CONSTANT: INPUT_SOURCE_B0 STRING "DATAB"
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone III"
// Retrieval info: CONSTANT: LPM_TYPE STRING "altmult_add"
// Retrieval info: CONSTANT: MULTIPLIER1_DIRECTION STRING "ADD"
// Retrieval info: CONSTANT: MULTIPLIER_REGISTER0 STRING "UNREGISTERED"
// Retrieval info: CONSTANT: NUMBER_OF_MULTIPLIERS NUMERIC "1"
// Retrieval info: CONSTANT: OUTPUT_REGISTER STRING "UNREGISTERED"
// Retrieval info: CONSTANT: PORT_ADDNSUB1 STRING "PORT_UNUSED"
// Retrieval info: CONSTANT: PORT_SIGNA STRING "PORT_USED"
// Retrieval info: CONSTANT: PORT_SIGNB STRING "PORT_USED"
// Retrieval info: CONSTANT: SIGNED_PIPELINE_REGISTER_A STRING "UNREGISTERED"
// Retrieval info: CONSTANT: SIGNED_PIPELINE_REGISTER_B STRING "UNREGISTERED"
// Retrieval info: CONSTANT: SIGNED_REGISTER_A STRING "UNREGISTERED"
// Retrieval info: CONSTANT: SIGNED_REGISTER_B STRING "UNREGISTERED"
// Retrieval info: CONSTANT: WIDTH_A NUMERIC "32"
// Retrieval info: CONSTANT: WIDTH_B NUMERIC "32"
// Retrieval info: CONSTANT: WIDTH_RESULT NUMERIC "64"
// Retrieval info: USED_PORT: clock0 0 0 0 0 INPUT VCC "clock0"
// Retrieval info: USED_PORT: dataa_0 0 0 32 0 INPUT GND "dataa_0[31..0]"
// Retrieval info: USED_PORT: datab_0 0 0 32 0 INPUT GND "datab_0[31..0]"
// Retrieval info: USED_PORT: result 0 0 64 0 OUTPUT GND "result[63..0]"
// Retrieval info: USED_PORT: signa 0 0 0 0 INPUT GND "signa"
// Retrieval info: USED_PORT: signb 0 0 0 0 INPUT GND "signb"
// Retrieval info: CONNECT: @clock0 0 0 0 0 clock0 0 0 0 0
// Retrieval info: CONNECT: @dataa 0 0 32 0 dataa_0 0 0 32 0
// Retrieval info: CONNECT: @datab 0 0 32 0 datab_0 0 0 32 0
// Retrieval info: CONNECT: @signa 0 0 0 0 signa 0 0 0 0
// Retrieval info: CONNECT: @signb 0 0 0 0 signb 0 0 0 0
// Retrieval info: CONNECT: result 0 0 64 0 @result 0 0 64 0
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTMULT_ADD32.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTMULT_ADD32.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTMULT_ADD32.cmp FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTMULT_ADD32.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTMULT_ADD32_inst.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTMULT_ADD32_bb.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ALTMULT_ADD32_syn.v TRUE
// Retrieval info: LIB_FILE: altera_mf
